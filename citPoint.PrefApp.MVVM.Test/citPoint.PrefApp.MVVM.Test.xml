<?xml version="1.0"?>
<!--
Generated by VSdocman, see http://www.helixoft.com
-->
<doc>
  <assembly>
    <name>citPoint.PrefApp.MVVM.Test</name>
  </assembly>
  <members>
    <member name="N:citPoint.PrefApp.MVVM.Test">
    </member>
    <member name="T:citPoint.PrefApp.MVVM.Test.App">
    </member>
    <member name="M:citPoint.PrefApp.MVVM.Test.App.#ctor">
      <summary>
Initializes a new instance of the $LS$topic_00000000000000FE$SL$$LE$App$EL$ class.</summary>
    </member>
    <member name="T:citPoint.PrefApp.MVVM.Test.MainPageVMTest">
      <summary>
This is a test class for PrefApp LoginModel and ViewModel</summary>
    </member>
    <member name="M:citPoint.PrefApp.MVVM.Test.MainPageVMTest.BuidUp">
      <summary>
Buids up.</summary>
    </member>
    <member name="M:citPoint.PrefApp.MVVM.Test.MainPageVMTest.TestBasics">
      <summary>
Tests the basics.</summary>
    </member>
    <member name="M:citPoint.PrefApp.MVVM.Test.MainPageVMTest.OnRaiseErrorMessage(System.Exception)">
      <summary>
Called when [raise error message].</summary>
      <param name="ex">
The ex.</param>
    </member>
    <member name="M:citPoint.PrefApp.MVVM.Test.MainPageVMTest.Login(citPOINT.PrefApp.Data.Web.LoginUser)">
      <summary>
Logins the specified _ user.</summary>
      <param name="_User">
The _ user.</param>
    </member>
    <member name="M:citPoint.PrefApp.MVVM.Test.MainPageVMTest.TestLogin">
      <summary>
Tests the login.</summary>
    </member>
    <member name="M:citPoint.PrefApp.MVVM.Test.MainPageVMTest.Logout">
      <summary>
Logouts this instance.</summary>
    </member>
    <member name="M:citPoint.PrefApp.MVVM.Test.MainPageVMTest.GeteNegBaseAddress">
      <summary>
Getes the neg base address.</summary>
    </member>
    <member name="P:citPoint.PrefApp.MVVM.Test.MainPageVMTest.MainPageViewModel">
      <summary>
Represent the MainPageViewModel</summary>
    </member>
    <member name="T:citPoint.PrefApp.MVVM.Test.MockLoginModel">
    </member>
    <member name="E:citPoint.PrefApp.MVVM.Test.MockLoginModel.LoginCompleted">
      <summary>
Event for callback of LoginAsync Function</summary>
    </member>
    <member name="E:citPoint.PrefApp.MVVM.Test.MockLoginModel.LogoutCompleted">
      <summary>
Event for callback of LogoutAsync Function</summary>
    </member>
    <member name="E:citPoint.PrefApp.MVVM.Test.MockLoginModel.GeteNegBaseAddressCompleted">
      <summary>
Event for callback of BaseAddress Function</summary>
    </member>
    <member name="E:citPoint.PrefApp.MVVM.Test.MockLoginModel.MakeUserOnlineCompleted">
      <summary>
Event for callback of MakeUserOnline Function</summary>
    </member>
    <member name="E:citPoint.PrefApp.MVVM.Test.MockLoginModel.MakeUserOfflineCompleted">
      <summary>
Event for callback of MakeUserOffline Function</summary>
    </member>
    <member name="E:citPoint.PrefApp.MVVM.Test.MockLoginModel.PropertyChanged">
      <summary>
Event for callback of PropertyChanged Function</summary>
    </member>
    <member name="M:citPoint.PrefApp.MVVM.Test.MockLoginModel.LoginAsync(System.String,System.String)">
      <summary>
Function that execute login service which wrap inside call eNeg RIA Service</summary>
      <param name="UserName">
Value of User Name of User</param>
      <param name="Password">
Value of Password of User</param>
    </member>
    <member name="M:citPoint.PrefApp.MVVM.Test.MockLoginModel.MakeUserOnline(System.Nullable{System.Guid},System.String)">
      <summary>
Function that execute MakeUserOnline service which wrap inside call eNeg RIA Service</summary>
      <returns>
bool that indicates whether operaton complete or not</returns>
      <param name="UserID">
Value of UserID of login User</param>
      <param name="IPAddress">
Value of IPAddress of login User</param>
    </member>
    <member name="M:citPoint.PrefApp.MVVM.Test.MockLoginModel.MakeUserOffline(System.Nullable{System.Guid})">
      <summary>
Function that execute MakeUserOffline service which wrap inside call eNeg RIA Service</summary>
      <returns>
bool that indicates whether operaton complete or not</returns>
      <param name="UserID">
Value of UserID of login User</param>
    </member>
    <member name="M:citPoint.PrefApp.MVVM.Test.MockLoginModel.LogoutAsync(System.Nullable{System.Guid})">
      <summary>
Make user Logged out and update his data in DB with that new state</summary>
      <param name="UserID">
Value of UserID of login User</param>
    </member>
    <member name="M:citPoint.PrefApp.MVVM.Test.MockLoginModel.GeteNegBaseAddressAsync">
      <summary>
Get End Point Used to cal eNeg RIA Service and then split to get Host Base Address</summary>
    </member>
    <member name="P:citPoint.PrefApp.MVVM.Test.MockLoginModel.IsBusy">
      <summary>
True if either "IsLoading" or "IsSubmitting" is in progress; otherwise, false</summary>
    </member>
    <member name="P:citPoint.PrefApp.MVVM.Test.MockLoginModel.HasChanges">
      <summary>
True if mLoginContext.HasChanges is true; otherwise, false</summary>
    </member>
    <member name="P:citPoint.PrefApp.MVVM.Test.MockLoginModel.LoginContext">
      <summary>
property with a getter only to can use our custom login Service which Call RIA Service</summary>
    </member>
    <member name="T:citPoint.PrefApp.MVVM.Test.MockPreferenceSetsModel">
      <summary>
Mock Preference Sets Model</summary>
    </member>
    <member name="E:citPoint.PrefApp.MVVM.Test.MockPreferenceSetsModel.PropertyChanged">
      <summary>
PropertyChanged Callback</summary>
    </member>
    <member name="E:citPoint.PrefApp.MVVM.Test.MockPreferenceSetsModel.GetMainPreferenceSetsComplete">
      <summary>
Get All Main Preference Sets CallBack --> Lookup table have the following data (My Sets, Organization Sets, Set Store)</summary>
    </member>
    <member name="E:citPoint.PrefApp.MVVM.Test.MockPreferenceSetsModel.GetPreferenceSetsComplete">
      <summary>
Get All Preferenece Sets CallBack</summary>
    </member>
    <member name="E:citPoint.PrefApp.MVVM.Test.MockPreferenceSetsModel.SaveChangesComplete">
      <summary>
SaveChangesComplete</summary>
    </member>
    <member name="M:citPoint.PrefApp.MVVM.Test.MockPreferenceSetsModel.GetMainPreferenceSetAsync">
      <summary>
Gets All Main Preference Sets Asynchronously -- > Lookup table have the following data (My Sets, Organization Sets, Set Store)</summary>
    </member>
    <member name="M:citPoint.PrefApp.MVVM.Test.MockPreferenceSetsModel.GetPreferenceSetAsync">
      <summary>
Gets All Preference Sets Asynchronously</summary>
    </member>
    <member name="M:citPoint.PrefApp.MVVM.Test.MockPreferenceSetsModel.RemovePreferenceSet(citPOINT.PrefApp.Data.Web.PreferenceSet)">
      <summary>
Remove PreferenceSet</summary>
      <param name="PrefSet">
</param>
    </member>
    <member name="M:citPoint.PrefApp.MVVM.Test.MockPreferenceSetsModel.AddPreferenceSet(System.Boolean)">
      <summary>
Add new PreferenceSet</summary>
      <returns>
Added PreferenceSet</returns>
      <param name="SetInContext">
to set PreferenceSet object in Context or not</param>
    </member>
    <member name="M:citPoint.PrefApp.MVVM.Test.MockPreferenceSetsModel.SaveChangesAsync">
      <summary>
Save any pending changes asynchronously</summary>
    </member>
    <member name="M:citPoint.PrefApp.MVVM.Test.MockPreferenceSetsModel.RejectChanges">
      <summary>
Reject any pending changes asynchronously</summary>
    </member>
    <member name="P:citPoint.PrefApp.MVVM.Test.MockPreferenceSetsModel.IsBusy">
      <summary>
Gets a value indicating whether this instance .</summary>
    </member>
    <member name="P:citPoint.PrefApp.MVVM.Test.MockPreferenceSetsModel.PrefAppContext">
      <summary>
property with a getter only to can use PrefApp Service</summary>
    </member>
    <member name="P:citPoint.PrefApp.MVVM.Test.MockPreferenceSetsModel.PrefSets">
      <summary>
List of Preference Sets</summary>
    </member>
    <member name="P:citPoint.PrefApp.MVVM.Test.MockPreferenceSetsModel.HasChanges">
      <summary>
Gets a value indicating whether .</summary>
    </member>
    <member name="P:citPoint.PrefApp.MVVM.Test.MockPreferenceSetsModel.MainPrefSets">
      <summary>
List of Main Preference Sets LookUp Table</summary>
    </member>
    <member name="T:citPoint.PrefApp.MVVM.Test.PreferenceSetsVMTest">
      <summary>
This is a test class for PrefApp PreferenceSetModel and PreferenceSetViewModel</summary>
    </member>
    <member name="M:citPoint.PrefApp.MVVM.Test.PreferenceSetsVMTest.RemovePreferenceSetCommand">
      <summary>
Removes the preference set command.</summary>
    </member>
    <member name="M:citPoint.PrefApp.MVVM.Test.PreferenceSetsVMTest.AddPreferenceSetCommand">
      <summary>
Adds the preference set command.</summary>
    </member>
    <member name="M:citPoint.PrefApp.MVVM.Test.PreferenceSetsVMTest.BuidUp">
      <summary>
Buids up.</summary>
    </member>
    <member name="M:citPoint.PrefApp.MVVM.Test.PreferenceSetsVMTest.TestBasics">
      <summary>
Tests the basics.</summary>
    </member>
    <member name="M:citPoint.PrefApp.MVVM.Test.PreferenceSetsVMTest.GetMainPreferenceSetAsync">
      <summary>
Gets the main preference set async.</summary>
    </member>
    <member name="M:citPoint.PrefApp.MVVM.Test.PreferenceSetsVMTest.GetPreferenceSetAsync">
      <summary>
Gets the preference set async.</summary>
    </member>
    <member name="M:citPoint.PrefApp.MVVM.Test.PreferenceSetsVMTest.CleanUp">
      <summary>
Used To Clean All Resources</summary>
    </member>
    <member name="P:citPoint.PrefApp.MVVM.Test.PreferenceSetsVMTest.PreferenceSetsViewModel">
      <summary>
Gets or sets the preference sets view model.</summary>
    </member>
  </members>
</doc>
