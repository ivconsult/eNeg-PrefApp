<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountDisabled" xml:space="preserve">
    <value>Sorry, your account is disabled.
Contact you administrator to enable your account.</value>
  </data>
  <data name="AccountLocked" xml:space="preserve">
    <value>Sorry, Your account is Locked</value>
  </data>
  <data name="CancelEditingItem" xml:space="preserve">
    <value>Cancel editing current item, Are you sure?</value>
  </data>
  <data name="ConfirmMessageBoxCaption" xml:space="preserve">
    <value>Delete Confirmation</value>
  </data>
  <data name="ConnectionFailed" xml:space="preserve">
    <value>Cannot connect to eNeg remote server</value>
  </data>
  <data name="DeleteCurrentItemMessageBoxText" xml:space="preserve">
    <value>Do you really want to delete?</value>
  </data>
  <data name="MaximumToMinimumValue" xml:space="preserve">
    <value>Maximum must be Greater than or Equal to Minimum value.</value>
  </data>
  <data name="MaxOptimumToMinOptimumToMinValue" xml:space="preserve">
    <value>Optimum End must be Between (or Equal) Optimum Start and Maximum Values.</value>
  </data>
  <data name="MinimumToMaximumValue" xml:space="preserve">
    <value>Minimum must be less than or Equal to Maximum value.</value>
  </data>
  <data name="MinOptimumToMaxOptimumToMaxValue" xml:space="preserve">
    <value>Optimum start must be Between (or Equal) Minumum and Optimum End Values.</value>
  </data>
  <data name="WrongCredentials" xml:space="preserve">
    <value>The E-mail or password is incorrect. 
Please try again.</value>
  </data>
  <data name="WrongPassword" xml:space="preserve">
    <value>The password is incorrect.
Please try again.</value>
  </data>
  <data name="RepeatedOptions" xml:space="preserve">
    <value>Their is another option with the same name.</value>
  </data>
  <data name="RepeatedIssue" xml:space="preserve">
    <value>Their is another issue with the same name.</value>
  </data>
  <data name="UndefiendType" xml:space="preserve">
    <value>Select valid issue type.</value>
  </data>
  <data name="WrongGraphValuesMinMax" xml:space="preserve">
    <value>you can not set Opt.Start=Minimum and also Opt.End=Maximum.</value>
  </data>
  <data name="RepeatedPrefSet" xml:space="preserve">
    <value>Their is another preference set with the same name.</value>
  </data>
  <data name="AddNegWindowHeader" xml:space="preserve">
    <value>Please select the Ongoing Negotiation that you want to add:</value>
  </data>
  <data name="LoadingNegs" xml:space="preserve">
    <value>Loading Negotiations</value>
  </data>
  <data name="AddingNegToPreferencesSetLoading" xml:space="preserve">
    <value>Please wait while adding negotiation to Preference set</value>
  </data>
  <data name="RemoveNegWindowHeader" xml:space="preserve">
    <value>Please select the Ongoing Negotiation that you want to remove:</value>
  </data>
  <data name="IssueLongName" xml:space="preserve">
    <value>Issue name must not exceed 300 character</value>
  </data>
  <data name="OptionLongName" xml:space="preserve">
    <value>Issue name must not exceed 100 character</value>
  </data>
  <data name="SendingMailRequest" xml:space="preserve">
    <value>Do you want to send an E-Mail to all other Negotiators to request </value>
  </data>
  <data name="NegotiationNotExist" xml:space="preserve">
    <value>Sorry, The Negotiation you want doesn't exist in any Preference Set</value>
  </data>
  <data name="MsgConfigureNeeded" xml:space="preserve">
    <value>App needs to be configured first. 

Please use the button "Settings".</value>
  </data>
  <data name="MsgNoAvailableNegotiationInfo" xml:space="preserve">
    <value>No available information for this negotiation.

   1- Go to main platform.

   2- Add data matching for the messages.

   3- Open report again.</value>
  </data>
  <data name="MsgNoAvailableConversationInfo" xml:space="preserve">
    <value>No available information for this conversation.

   1- Go to main platform.

   2- Add data matching for the messages.

   3- Open report again.</value>
  </data>
  <data name="UserHaveNotOrganization" xml:space="preserve">
    <value>You should be a member in any organization to can publish to it.</value>
  </data>
  <data name="UnAssignNegotiationConfirm" xml:space="preserve">
    <value>Do you really want to unassign?</value>
  </data>
  <data name="UnassignedConfirmMessageBoxCaption" xml:space="preserve">
    <value>Unassign Confirmation</value>
  </data>
</root>