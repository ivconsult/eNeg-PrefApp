<?xml version="1.0"?>
<!--
Generated by VSdocman, see http://www.helixoft.com
-->
<doc>
  <assembly>
    <name>citPOINT.PrefApp.ViewModel</name>
  </assembly>
  <members>
    <member name="N:citPOINT.PrefApp.ViewModel">
    </member>
    <member name="T:citPOINT.PrefApp.ViewModel.MainPageViewModel">
      <summary>
Class For Login operation (Login and logout).</summary>
    </member>
    <member name="M:citPOINT.PrefApp.ViewModel.MainPageViewModel.#ctor(citPOINT.PrefApp.Common.ILoginModel)">
      <param name="LoginModel">
</param>
    </member>
    <member name="M:citPOINT.PrefApp.ViewModel.MainPageViewModel.GeteNegBaseAddressAsync">
      <summary>
Call GeteNegBaseAddress Asynchronously</summary>
    </member>
    <member name="M:citPOINT.PrefApp.ViewModel.MainPageViewModel.LogoutAsync">
      <summary>
Make Logout Asynchronously</summary>
    </member>
    <member name="M:citPOINT.PrefApp.ViewModel.MainPageViewModel.LoginAsync(citPOINT.PrefApp.Data.Web.LoginUser)">
      <summary>
Make Logout Asynchronously</summary>
      <param name="g">
</param>
    </member>
    <member name="M:citPOINT.PrefApp.ViewModel.MainPageViewModel.Cleanup">
      <summary>
CleanUp MainPage Model</summary>
    </member>
    <member name="P:citPOINT.PrefApp.ViewModel.MainPageViewModel.WelcomeText">
      <summary>
carry the welcome text the will then be concatenated with Current LoggedIn UserName</summary>
    </member>
    <member name="P:citPOINT.PrefApp.ViewModel.MainPageViewModel.CurrentUser">
    </member>
    <member name="P:citPOINT.PrefApp.ViewModel.MainPageViewModel.LoginCommand">
      <summary>
Relay Command for login process</summary>
    </member>
    <member name="P:citPOINT.PrefApp.ViewModel.MainPageViewModel.LogoutCommand">
      <summary>
Relay Command for logout process</summary>
    </member>
    <member name="P:citPOINT.PrefApp.ViewModel.MainPageViewModel.LoginIsInProgress">
      <summary>
Indicate whether calling eNeg Login service has finished or not</summary>
    </member>
    <member name="P:citPOINT.PrefApp.ViewModel.MainPageViewModel.IsLoggedIn">
      <summary>
true if there is someone Logged out; otherwise, false</summary>
    </member>
    <member name="P:citPOINT.PrefApp.ViewModel.MainPageViewModel.CurrentScreenText">
      <summary>
String carry the current screen we currently navigate</summary>
    </member>
    <member name="P:citPOINT.PrefApp.ViewModel.MainPageViewModel.IsLoggedOut">
      <summary>
true if there is someone Logged In; otherwise, false</summary>
    </member>
    <member name="T:citPOINT.PrefApp.ViewModel.PreferenceSetsViewModel">
      <summary>
Class to Manage Preference Sets</summary>
    </member>
    <member name="M:citPOINT.PrefApp.ViewModel.PreferenceSetsViewModel.#ctor(citPOINT.PrefApp.Common.IPreferenceSetsModel)">
      <param name="PreferenceSetsModel">
</param>
    </member>
    <member name="M:citPOINT.PrefApp.ViewModel.PreferenceSetsViewModel.GetMainPreferenceSetAsync">
      <summary>
Gets All Preference Sets Asynchronously</summary>
    </member>
    <member name="M:citPOINT.PrefApp.ViewModel.PreferenceSetsViewModel.GetPreferenceSetAsync">
      <summary>
Gets All Preference Sets Asynchronously</summary>
    </member>
    <member name="M:citPOINT.PrefApp.ViewModel.PreferenceSetsViewModel.AddPreferenceSet(System.Boolean)">
      <summary>
Add New PreferenceSet</summary>
      <returns>
Preference Set</returns>
      <param name="SetInContext">
Set new PrefSet object In Context or not</param>
    </member>
    <member name="M:citPOINT.PrefApp.ViewModel.PreferenceSetsViewModel.RemovePreferenceSet(citPOINT.PrefApp.Data.Web.PreferenceSet)">
      <summary>
Remove PreferenceSet</summary>
      <param name="PrefSet">
</param>
    </member>
    <member name="P:citPOINT.PrefApp.ViewModel.PreferenceSetsViewModel.PreferenceSets">
      <summary>
Gets or sets the Preference Sets</summary>
    </member>
    <member name="P:citPOINT.PrefApp.ViewModel.PreferenceSetsViewModel.SubmitChangesCommand">
      <summary>
User Save changes via Calling SubmitChangesMessage so It call OnSubmitChangesMessage Method.</summary>
    </member>
    <member name="P:citPOINT.PrefApp.ViewModel.PreferenceSetsViewModel.DeleteItemCommand">
      <summary>
Used to Delete the Current PreferenceSet Used In case of Right Click Delete this Item</summary>
    </member>
    <member name="P:citPOINT.PrefApp.ViewModel.PreferenceSetsViewModel.PreferenceSetsSource">
      <summary>
Observable collection of Preference Sets</summary>
    </member>
    <member name="P:citPOINT.PrefApp.ViewModel.PreferenceSetsViewModel.CancelChangesCommand">
      <summary>
User Cancelling changes via Calling CancelChangesMessage so It call OnCancelChangesMessage Method.</summary>
    </member>
    <member name="P:citPOINT.PrefApp.ViewModel.PreferenceSetsViewModel.CurrentPreferenceSet">
      <summary>
Gets or sets the current PreferenceSet</summary>
    </member>
    <member name="P:citPOINT.PrefApp.ViewModel.PreferenceSetsViewModel.MainPreferenceSets">
      <summary>
Gets or sets the Main Preference Sets</summary>
    </member>
    <member name="P:citPOINT.PrefApp.ViewModel.PreferenceSetsViewModel.AddNewPreferenceSetCommand">
      <summary>
Useed to Add New Negotiation Node To The Leaf of the Tree Used Incase of Click New Button (Addon)</summary>
    </member>
    <member name="T:citPOINT.PrefApp.ViewModel.Resources">
      <summary>
A strongly-typed resource class, for looking up localized strings, etc.</summary>
    </member>
    <member name="P:citPOINT.PrefApp.ViewModel.Resources.WrongCredentials">
      <summary>
Looks up a localized string similar to Wrong E-mail or Password.</summary>
    </member>
    <member name="P:citPOINT.PrefApp.ViewModel.Resources.ResourceManager">
      <summary>
Returns the cached ResourceManager instance used by this class.</summary>
    </member>
    <member name="P:citPOINT.PrefApp.ViewModel.Resources.Culture">
      <summary>
Overrides the current thread's CurrentUICulture property for all   resource lookups using this strongly typed resource class.</summary>
    </member>
    <member name="P:citPOINT.PrefApp.ViewModel.Resources.CancelEditingItem">
      <summary>
Looks up a localized string similar to Cancel editing current item, Are you sure?.</summary>
    </member>
    <member name="P:citPOINT.PrefApp.ViewModel.Resources.ConnectionFailed">
      <summary>
Looks up a localized string similar to Cannot connect to eNeg remote server.</summary>
    </member>
    <member name="P:citPOINT.PrefApp.ViewModel.Resources.DeleteCurrentItemMessageBoxText">
      <summary>
Looks up a localized string similar to Delete current Item, Are you sure?.</summary>
    </member>
    <member name="P:citPOINT.PrefApp.ViewModel.Resources.AccountDisabled">
      <summary>
Looks up a localized string similar to Sorry, your account is disabled. Contact you administrator to enable your account..</summary>
    </member>
    <member name="P:citPOINT.PrefApp.ViewModel.Resources.ConfirmMessageBoxCaption">
      <summary>
Looks up a localized string similar to Please confirm.</summary>
    </member>
    <member name="P:citPOINT.PrefApp.ViewModel.Resources.AccountLocked">
      <summary>
Looks up a localized string similar to Sorry, Your account is Locked.</summary>
    </member>
  </members>
</doc>
