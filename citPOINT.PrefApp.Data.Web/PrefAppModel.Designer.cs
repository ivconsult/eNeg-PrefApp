//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("PrefAppModel", "FK__History__ActionT__2C3393D01", "ActionType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.PrefApp.Data.Web.ActionType), "History1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.PrefApp.Data.Web.History), true)]
[assembly: EdmRelationshipAttribute("PrefAppModel", "FK__Issue__IssueType__2E1BDC421", "IssueType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.PrefApp.Data.Web.IssueType), "Issue1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.PrefApp.Data.Web.Issue), true)]
[assembly: EdmRelationshipAttribute("PrefAppModel", "FK__Issue__Preferenc__2D27B8091", "PreferenceSet1", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.PrefApp.Data.Web.PreferenceSet), "Issue1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.PrefApp.Data.Web.Issue), true)]
[assembly: EdmRelationshipAttribute("PrefAppModel", "FK__LaterRate__Issue__2F10007B1", "Issue1", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.PrefApp.Data.Web.Issue), "LaterRatedIssue1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.PrefApp.Data.Web.LaterRatedIssue), true)]
[assembly: EdmRelationshipAttribute("PrefAppModel", "FK__NumericIs__Issue__30F848ED1", "Issue1", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.PrefApp.Data.Web.Issue), "NumericIssue1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.PrefApp.Data.Web.NumericIssue), true)]
[assembly: EdmRelationshipAttribute("PrefAppModel", "FK__OptionIss__Issue__31EC6D261", "Issue1", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.PrefApp.Data.Web.Issue), "OptionIssue1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.PrefApp.Data.Web.OptionIssue), true)]
[assembly: EdmRelationshipAttribute("PrefAppModel", "FK__Preferenc__MainP__32E0915F1", "MainPreferenceSet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.PrefApp.Data.Web.MainPreferenceSet), "PreferenceSet1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.PrefApp.Data.Web.PreferenceSet), true)]
[assembly: EdmRelationshipAttribute("PrefAppModel", "FK__MessageOp__Optio__72C60C4A", "OptionIssue", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.PrefApp.Data.Web.OptionIssue), "MessageOptionIssue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.PrefApp.Data.Web.MessageOptionIssue), true)]
[assembly: EdmRelationshipAttribute("PrefAppModel", "FK__Conversat__NegCo__0E6E26BF", "NegConversation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.PrefApp.Data.Web.NegConversation), "ConversationMessage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.PrefApp.Data.Web.ConversationMessage), true)]
[assembly: EdmRelationshipAttribute("PrefAppModel", "FK__MessageIs__Conve__0F624AF8", "ConversationMessage", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.PrefApp.Data.Web.ConversationMessage), "MessageIssue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.PrefApp.Data.Web.MessageIssue), true)]
[assembly: EdmRelationshipAttribute("PrefAppModel", "FK__MessageIs__Issue__10566F31", "Issue", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.PrefApp.Data.Web.Issue), "MessageIssue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.PrefApp.Data.Web.MessageIssue), true)]
[assembly: EdmRelationshipAttribute("PrefAppModel", "FK__MessageOp__Messa__123EB7A3", "MessageIssue", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.PrefApp.Data.Web.MessageIssue), "MessageOptionIssue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.PrefApp.Data.Web.MessageOptionIssue), true)]
[assembly: EdmRelationshipAttribute("PrefAppModel", "FK__NegConver__Prefe__1332DBDC", "PreferenceSetNeg", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.PrefApp.Data.Web.PreferenceSetNeg), "NegConversation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.PrefApp.Data.Web.NegConversation), true)]
[assembly: EdmRelationshipAttribute("PrefAppModel", "FK__Preferenc__Prefe__14270015", "PreferenceSet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.PrefApp.Data.Web.PreferenceSet), "PreferenceSetNeg", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.PrefApp.Data.Web.PreferenceSetNeg), true)]
[assembly: EdmRelationshipAttribute("PrefAppModel", "FK__MessageLa__Later__2645B050", "LaterRatedIssue", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.PrefApp.Data.Web.LaterRatedIssue), "MessageLaterRatedIssue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.PrefApp.Data.Web.MessageLaterRatedIssue), true)]
[assembly: EdmRelationshipAttribute("PrefAppModel", "FK__MessageLa__Messa__25518C17", "MessageIssue", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.PrefApp.Data.Web.MessageIssue), "MessageLaterRatedIssue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.PrefApp.Data.Web.MessageLaterRatedIssue), true)]
[assembly: EdmRelationshipAttribute("PrefAppModel", "FK_PreferenceSetOrganization_PreferenceSet", "PreferenceSet", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(citPOINT.PrefApp.Data.Web.PreferenceSet), "PreferenceSetOrganization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(citPOINT.PrefApp.Data.Web.PreferenceSetOrganization), true)]

#endregion

namespace citPOINT.PrefApp.Data.Web
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PrefAppEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new PrefAppEntities object using the connection string found in the 'PrefAppEntities' section of the application configuration file.
        /// </summary>
        public PrefAppEntities() : base("name=PrefAppEntities", "PrefAppEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PrefAppEntities object.
        /// </summary>
        public PrefAppEntities(string connectionString) : base(connectionString, "PrefAppEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PrefAppEntities object.
        /// </summary>
        public PrefAppEntities(EntityConnection connection) : base(connection, "PrefAppEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<C__RefactorLog> C__RefactorLog
        {
            get
            {
                if ((_C__RefactorLog == null))
                {
                    _C__RefactorLog = base.CreateObjectSet<C__RefactorLog>("C__RefactorLog");
                }
                return _C__RefactorLog;
            }
        }
        private ObjectSet<C__RefactorLog> _C__RefactorLog;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActionType> ActionTypes
        {
            get
            {
                if ((_ActionTypes == null))
                {
                    _ActionTypes = base.CreateObjectSet<ActionType>("ActionTypes");
                }
                return _ActionTypes;
            }
        }
        private ObjectSet<ActionType> _ActionTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IssueType> IssueTypes
        {
            get
            {
                if ((_IssueTypes == null))
                {
                    _IssueTypes = base.CreateObjectSet<IssueType>("IssueTypes");
                }
                return _IssueTypes;
            }
        }
        private ObjectSet<IssueType> _IssueTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MainPreferenceSet> MainPreferenceSets
        {
            get
            {
                if ((_MainPreferenceSets == null))
                {
                    _MainPreferenceSets = base.CreateObjectSet<MainPreferenceSet>("MainPreferenceSets");
                }
                return _MainPreferenceSets;
            }
        }
        private ObjectSet<MainPreferenceSet> _MainPreferenceSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<History> Histories
        {
            get
            {
                if ((_Histories == null))
                {
                    _Histories = base.CreateObjectSet<History>("Histories");
                }
                return _Histories;
            }
        }
        private ObjectSet<History> _Histories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Issue> Issues
        {
            get
            {
                if ((_Issues == null))
                {
                    _Issues = base.CreateObjectSet<Issue>("Issues");
                }
                return _Issues;
            }
        }
        private ObjectSet<Issue> _Issues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LaterRatedIssue> LaterRatedIssues
        {
            get
            {
                if ((_LaterRatedIssues == null))
                {
                    _LaterRatedIssues = base.CreateObjectSet<LaterRatedIssue>("LaterRatedIssues");
                }
                return _LaterRatedIssues;
            }
        }
        private ObjectSet<LaterRatedIssue> _LaterRatedIssues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NumericIssue> NumericIssues
        {
            get
            {
                if ((_NumericIssues == null))
                {
                    _NumericIssues = base.CreateObjectSet<NumericIssue>("NumericIssues");
                }
                return _NumericIssues;
            }
        }
        private ObjectSet<NumericIssue> _NumericIssues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OptionIssue> OptionIssues
        {
            get
            {
                if ((_OptionIssues == null))
                {
                    _OptionIssues = base.CreateObjectSet<OptionIssue>("OptionIssues");
                }
                return _OptionIssues;
            }
        }
        private ObjectSet<OptionIssue> _OptionIssues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PreferenceSet> PreferenceSets
        {
            get
            {
                if ((_PreferenceSets == null))
                {
                    _PreferenceSets = base.CreateObjectSet<PreferenceSet>("PreferenceSets");
                }
                return _PreferenceSets;
            }
        }
        private ObjectSet<PreferenceSet> _PreferenceSets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MessageOptionIssue> MessageOptionIssues
        {
            get
            {
                if ((_MessageOptionIssues == null))
                {
                    _MessageOptionIssues = base.CreateObjectSet<MessageOptionIssue>("MessageOptionIssues");
                }
                return _MessageOptionIssues;
            }
        }
        private ObjectSet<MessageOptionIssue> _MessageOptionIssues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ConversationMessage> ConversationMessages
        {
            get
            {
                if ((_ConversationMessages == null))
                {
                    _ConversationMessages = base.CreateObjectSet<ConversationMessage>("ConversationMessages");
                }
                return _ConversationMessages;
            }
        }
        private ObjectSet<ConversationMessage> _ConversationMessages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MessageIssue> MessageIssues
        {
            get
            {
                if ((_MessageIssues == null))
                {
                    _MessageIssues = base.CreateObjectSet<MessageIssue>("MessageIssues");
                }
                return _MessageIssues;
            }
        }
        private ObjectSet<MessageIssue> _MessageIssues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NegConversation> NegConversations
        {
            get
            {
                if ((_NegConversations == null))
                {
                    _NegConversations = base.CreateObjectSet<NegConversation>("NegConversations");
                }
                return _NegConversations;
            }
        }
        private ObjectSet<NegConversation> _NegConversations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PreferenceSetNeg> PreferenceSetNegs
        {
            get
            {
                if ((_PreferenceSetNegs == null))
                {
                    _PreferenceSetNegs = base.CreateObjectSet<PreferenceSetNeg>("PreferenceSetNegs");
                }
                return _PreferenceSetNegs;
            }
        }
        private ObjectSet<PreferenceSetNeg> _PreferenceSetNegs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MessageLaterRatedIssue> MessageLaterRatedIssues
        {
            get
            {
                if ((_MessageLaterRatedIssues == null))
                {
                    _MessageLaterRatedIssues = base.CreateObjectSet<MessageLaterRatedIssue>("MessageLaterRatedIssues");
                }
                return _MessageLaterRatedIssues;
            }
        }
        private ObjectSet<MessageLaterRatedIssue> _MessageLaterRatedIssues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PreferenceSetOrganization> PreferenceSetOrganizations
        {
            get
            {
                if ((_PreferenceSetOrganizations == null))
                {
                    _PreferenceSetOrganizations = base.CreateObjectSet<PreferenceSetOrganization>("PreferenceSetOrganizations");
                }
                return _PreferenceSetOrganizations;
            }
        }
        private ObjectSet<PreferenceSetOrganization> _PreferenceSetOrganizations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<HighValuesNeg> HighValuesNegs
        {
            get
            {
                if ((_HighValuesNegs == null))
                {
                    _HighValuesNegs = base.CreateObjectSet<HighValuesNeg>("HighValuesNegs");
                }
                return _HighValuesNegs;
            }
        }
        private ObjectSet<HighValuesNeg> _HighValuesNegs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<IssueHistoryView> IssueHistoryViews
        {
            get
            {
                if ((_IssueHistoryViews == null))
                {
                    _IssueHistoryViews = base.CreateObjectSet<IssueHistoryView>("IssueHistoryViews");
                }
                return _IssueHistoryViews;
            }
        }
        private ObjectSet<IssueHistoryView> _IssueHistoryViews;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the C__RefactorLog EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToC__RefactorLog(C__RefactorLog c__RefactorLog)
        {
            base.AddObject("C__RefactorLog", c__RefactorLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActionTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActionTypes(ActionType actionType)
        {
            base.AddObject("ActionTypes", actionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IssueTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssueTypes(IssueType issueType)
        {
            base.AddObject("IssueTypes", issueType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MainPreferenceSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMainPreferenceSets(MainPreferenceSet mainPreferenceSet)
        {
            base.AddObject("MainPreferenceSets", mainPreferenceSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Histories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHistories(History history)
        {
            base.AddObject("Histories", history);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Issues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssues(Issue issue)
        {
            base.AddObject("Issues", issue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LaterRatedIssues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLaterRatedIssues(LaterRatedIssue laterRatedIssue)
        {
            base.AddObject("LaterRatedIssues", laterRatedIssue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NumericIssues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNumericIssues(NumericIssue numericIssue)
        {
            base.AddObject("NumericIssues", numericIssue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OptionIssues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOptionIssues(OptionIssue optionIssue)
        {
            base.AddObject("OptionIssues", optionIssue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PreferenceSets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPreferenceSets(PreferenceSet preferenceSet)
        {
            base.AddObject("PreferenceSets", preferenceSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MessageOptionIssues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessageOptionIssues(MessageOptionIssue messageOptionIssue)
        {
            base.AddObject("MessageOptionIssues", messageOptionIssue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ConversationMessages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConversationMessages(ConversationMessage conversationMessage)
        {
            base.AddObject("ConversationMessages", conversationMessage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MessageIssues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessageIssues(MessageIssue messageIssue)
        {
            base.AddObject("MessageIssues", messageIssue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NegConversations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNegConversations(NegConversation negConversation)
        {
            base.AddObject("NegConversations", negConversation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PreferenceSetNegs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPreferenceSetNegs(PreferenceSetNeg preferenceSetNeg)
        {
            base.AddObject("PreferenceSetNegs", preferenceSetNeg);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MessageLaterRatedIssues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMessageLaterRatedIssues(MessageLaterRatedIssue messageLaterRatedIssue)
        {
            base.AddObject("MessageLaterRatedIssues", messageLaterRatedIssue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PreferenceSetOrganizations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPreferenceSetOrganizations(PreferenceSetOrganization preferenceSetOrganization)
        {
            base.AddObject("PreferenceSetOrganizations", preferenceSetOrganization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HighValuesNegs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHighValuesNegs(HighValuesNeg highValuesNeg)
        {
            base.AddObject("HighValuesNegs", highValuesNeg);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the IssueHistoryViews EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssueHistoryViews(IssueHistoryView issueHistoryView)
        {
            base.AddObject("IssueHistoryViews", issueHistoryView);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="preferenceSetNegID">No Metadata Documentation available.</param>
        /// <param name="issueTypeID">No Metadata Documentation available.</param>
        /// <param name="issueID">No Metadata Documentation available.</param>
        /// <param name="isMaxValue">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Decimal>> GetMessageIssueSelectMaxMinValue(Nullable<global::System.Guid> preferenceSetNegID, Nullable<global::System.Guid> issueTypeID, Nullable<global::System.Guid> issueID, Nullable<global::System.Boolean> isMaxValue)
        {
            ObjectParameter preferenceSetNegIDParameter;
            if (preferenceSetNegID.HasValue)
            {
                preferenceSetNegIDParameter = new ObjectParameter("preferenceSetNegID", preferenceSetNegID);
            }
            else
            {
                preferenceSetNegIDParameter = new ObjectParameter("preferenceSetNegID", typeof(global::System.Guid));
            }
    
            ObjectParameter issueTypeIDParameter;
            if (issueTypeID.HasValue)
            {
                issueTypeIDParameter = new ObjectParameter("IssueTypeID", issueTypeID);
            }
            else
            {
                issueTypeIDParameter = new ObjectParameter("IssueTypeID", typeof(global::System.Guid));
            }
    
            ObjectParameter issueIDParameter;
            if (issueID.HasValue)
            {
                issueIDParameter = new ObjectParameter("IssueID", issueID);
            }
            else
            {
                issueIDParameter = new ObjectParameter("IssueID", typeof(global::System.Guid));
            }
    
            ObjectParameter isMaxValueParameter;
            if (isMaxValue.HasValue)
            {
                isMaxValueParameter = new ObjectParameter("IsMaxValue", isMaxValue);
            }
            else
            {
                isMaxValueParameter = new ObjectParameter("IsMaxValue", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Decimal>>("GetMessageIssueSelectMaxMinValue", preferenceSetNegIDParameter, issueTypeIDParameter, issueIDParameter, isMaxValueParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="conversationMessageID">No Metadata Documentation available.</param>
        public int UpdateConversationAndNegotiationPercentage(Nullable<global::System.Guid> conversationMessageID)
        {
            ObjectParameter conversationMessageIDParameter;
            if (conversationMessageID.HasValue)
            {
                conversationMessageIDParameter = new ObjectParameter("ConversationMessageID", conversationMessageID);
            }
            else
            {
                conversationMessageIDParameter = new ObjectParameter("ConversationMessageID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction("UpdateConversationAndNegotiationPercentage", conversationMessageIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userID">No Metadata Documentation available.</param>
        /// <param name="listOfOrganizations">No Metadata Documentation available.</param>
        public ObjectResult<PreferenceSet> GetPreferenceSetForUser(Nullable<global::System.Guid> userID, global::System.String listOfOrganizations)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            ObjectParameter listOfOrganizationsParameter;
            if (listOfOrganizations != null)
            {
                listOfOrganizationsParameter = new ObjectParameter("ListOfOrganizations", listOfOrganizations);
            }
            else
            {
                listOfOrganizationsParameter = new ObjectParameter("ListOfOrganizations", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<PreferenceSet>("GetPreferenceSetForUser", userIDParameter, listOfOrganizationsParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="userID">No Metadata Documentation available.</param>
        /// <param name="listOfOrganizations">No Metadata Documentation available.</param>
        public ObjectResult<PreferenceSet> GetPreferenceSetForUser(Nullable<global::System.Guid> userID, global::System.String listOfOrganizations, MergeOption mergeOption)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            ObjectParameter listOfOrganizationsParameter;
            if (listOfOrganizations != null)
            {
                listOfOrganizationsParameter = new ObjectParameter("ListOfOrganizations", listOfOrganizations);
            }
            else
            {
                listOfOrganizationsParameter = new ObjectParameter("ListOfOrganizations", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<PreferenceSet>("GetPreferenceSetForUser", mergeOption, userIDParameter, listOfOrganizationsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userID">No Metadata Documentation available.</param>
        /// <param name="listOfOrganizations">No Metadata Documentation available.</param>
        public ObjectResult<Issue> GetIssueForUser(Nullable<global::System.Guid> userID, global::System.String listOfOrganizations)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            ObjectParameter listOfOrganizationsParameter;
            if (listOfOrganizations != null)
            {
                listOfOrganizationsParameter = new ObjectParameter("ListOfOrganizations", listOfOrganizations);
            }
            else
            {
                listOfOrganizationsParameter = new ObjectParameter("ListOfOrganizations", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Issue>("GetIssueForUser", userIDParameter, listOfOrganizationsParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="userID">No Metadata Documentation available.</param>
        /// <param name="listOfOrganizations">No Metadata Documentation available.</param>
        public ObjectResult<Issue> GetIssueForUser(Nullable<global::System.Guid> userID, global::System.String listOfOrganizations, MergeOption mergeOption)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            ObjectParameter listOfOrganizationsParameter;
            if (listOfOrganizations != null)
            {
                listOfOrganizationsParameter = new ObjectParameter("ListOfOrganizations", listOfOrganizations);
            }
            else
            {
                listOfOrganizationsParameter = new ObjectParameter("ListOfOrganizations", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Issue>("GetIssueForUser", mergeOption, userIDParameter, listOfOrganizationsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userID">No Metadata Documentation available.</param>
        /// <param name="listOfOrganizations">No Metadata Documentation available.</param>
        public ObjectResult<NumericIssue> GetNumericIssueForUser(Nullable<global::System.Guid> userID, global::System.String listOfOrganizations)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            ObjectParameter listOfOrganizationsParameter;
            if (listOfOrganizations != null)
            {
                listOfOrganizationsParameter = new ObjectParameter("ListOfOrganizations", listOfOrganizations);
            }
            else
            {
                listOfOrganizationsParameter = new ObjectParameter("ListOfOrganizations", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<NumericIssue>("GetNumericIssueForUser", userIDParameter, listOfOrganizationsParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="userID">No Metadata Documentation available.</param>
        /// <param name="listOfOrganizations">No Metadata Documentation available.</param>
        public ObjectResult<NumericIssue> GetNumericIssueForUser(Nullable<global::System.Guid> userID, global::System.String listOfOrganizations, MergeOption mergeOption)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            ObjectParameter listOfOrganizationsParameter;
            if (listOfOrganizations != null)
            {
                listOfOrganizationsParameter = new ObjectParameter("ListOfOrganizations", listOfOrganizations);
            }
            else
            {
                listOfOrganizationsParameter = new ObjectParameter("ListOfOrganizations", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<NumericIssue>("GetNumericIssueForUser", mergeOption, userIDParameter, listOfOrganizationsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userID">No Metadata Documentation available.</param>
        /// <param name="listOfOrganizations">No Metadata Documentation available.</param>
        public ObjectResult<OptionIssue> GetOptionIssueForUser(Nullable<global::System.Guid> userID, global::System.String listOfOrganizations)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            ObjectParameter listOfOrganizationsParameter;
            if (listOfOrganizations != null)
            {
                listOfOrganizationsParameter = new ObjectParameter("ListOfOrganizations", listOfOrganizations);
            }
            else
            {
                listOfOrganizationsParameter = new ObjectParameter("ListOfOrganizations", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<OptionIssue>("GetOptionIssueForUser", userIDParameter, listOfOrganizationsParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="userID">No Metadata Documentation available.</param>
        /// <param name="listOfOrganizations">No Metadata Documentation available.</param>
        public ObjectResult<OptionIssue> GetOptionIssueForUser(Nullable<global::System.Guid> userID, global::System.String listOfOrganizations, MergeOption mergeOption)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            ObjectParameter listOfOrganizationsParameter;
            if (listOfOrganizations != null)
            {
                listOfOrganizationsParameter = new ObjectParameter("ListOfOrganizations", listOfOrganizations);
            }
            else
            {
                listOfOrganizationsParameter = new ObjectParameter("ListOfOrganizations", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<OptionIssue>("GetOptionIssueForUser", mergeOption, userIDParameter, listOfOrganizationsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userID">No Metadata Documentation available.</param>
        /// <param name="listOfOrganizations">No Metadata Documentation available.</param>
        public ObjectResult<LaterRatedIssue> GetLaterRatedIssueForUser(Nullable<global::System.Guid> userID, global::System.String listOfOrganizations)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            ObjectParameter listOfOrganizationsParameter;
            if (listOfOrganizations != null)
            {
                listOfOrganizationsParameter = new ObjectParameter("ListOfOrganizations", listOfOrganizations);
            }
            else
            {
                listOfOrganizationsParameter = new ObjectParameter("ListOfOrganizations", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LaterRatedIssue>("GetLaterRatedIssueForUser", userIDParameter, listOfOrganizationsParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="userID">No Metadata Documentation available.</param>
        /// <param name="listOfOrganizations">No Metadata Documentation available.</param>
        public ObjectResult<LaterRatedIssue> GetLaterRatedIssueForUser(Nullable<global::System.Guid> userID, global::System.String listOfOrganizations, MergeOption mergeOption)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            ObjectParameter listOfOrganizationsParameter;
            if (listOfOrganizations != null)
            {
                listOfOrganizationsParameter = new ObjectParameter("ListOfOrganizations", listOfOrganizations);
            }
            else
            {
                listOfOrganizationsParameter = new ObjectParameter("ListOfOrganizations", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LaterRatedIssue>("GetLaterRatedIssueForUser", mergeOption, userIDParameter, listOfOrganizationsParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<IssueStatisticalsResult> GetIssueStatisticals(Nullable<global::System.Guid> userID)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<IssueStatisticalsResult>("GetIssueStatisticals", userIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="keyWord">No Metadata Documentation available.</param>
        /// <param name="currentNegotiationID">No Metadata Documentation available.</param>
        public ObjectResult<IssueHistoryResult> GetIssueHistory(global::System.String keyWord, Nullable<global::System.Guid> currentNegotiationID)
        {
            ObjectParameter keyWordParameter;
            if (keyWord != null)
            {
                keyWordParameter = new ObjectParameter("KeyWord", keyWord);
            }
            else
            {
                keyWordParameter = new ObjectParameter("KeyWord", typeof(global::System.String));
            }
    
            ObjectParameter currentNegotiationIDParameter;
            if (currentNegotiationID.HasValue)
            {
                currentNegotiationIDParameter = new ObjectParameter("CurrentNegotiationID", currentNegotiationID);
            }
            else
            {
                currentNegotiationIDParameter = new ObjectParameter("CurrentNegotiationID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<IssueHistoryResult>("GetIssueHistory", keyWordParameter, currentNegotiationIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="conversationID">No Metadata Documentation available.</param>
        public ObjectResult<ConversationPeriod> GetConversationPeriod(Nullable<global::System.Guid> conversationID)
        {
            ObjectParameter conversationIDParameter;
            if (conversationID.HasValue)
            {
                conversationIDParameter = new ObjectParameter("ConversationID", conversationID);
            }
            else
            {
                conversationIDParameter = new ObjectParameter("ConversationID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<ConversationPeriod>("GetConversationPeriod", conversationIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="negotiationID">No Metadata Documentation available.</param>
        public ObjectResult<ConversationPeriod> GetNegotiationPeriod(Nullable<global::System.Guid> negotiationID)
        {
            ObjectParameter negotiationIDParameter;
            if (negotiationID.HasValue)
            {
                negotiationIDParameter = new ObjectParameter("NegotiationID", negotiationID);
            }
            else
            {
                negotiationIDParameter = new ObjectParameter("NegotiationID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<ConversationPeriod>("GetNegotiationPeriod", negotiationIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="negotiationID">No Metadata Documentation available.</param>
        /// <param name="conversationID">No Metadata Documentation available.</param>
        /// <param name="offerType">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Decimal>> GetLastTwoOffersRate(Nullable<global::System.Guid> negotiationID, Nullable<global::System.Guid> conversationID, Nullable<global::System.Byte> offerType)
        {
            ObjectParameter negotiationIDParameter;
            if (negotiationID.HasValue)
            {
                negotiationIDParameter = new ObjectParameter("NegotiationID", negotiationID);
            }
            else
            {
                negotiationIDParameter = new ObjectParameter("NegotiationID", typeof(global::System.Guid));
            }
    
            ObjectParameter conversationIDParameter;
            if (conversationID.HasValue)
            {
                conversationIDParameter = new ObjectParameter("ConversationID", conversationID);
            }
            else
            {
                conversationIDParameter = new ObjectParameter("ConversationID", typeof(global::System.Guid));
            }
    
            ObjectParameter offerTypeParameter;
            if (offerType.HasValue)
            {
                offerTypeParameter = new ObjectParameter("OfferType", offerType);
            }
            else
            {
                offerTypeParameter = new ObjectParameter("OfferType", typeof(global::System.Byte));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Decimal>>("GetLastTwoOffersRate", negotiationIDParameter, conversationIDParameter, offerTypeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="negotiationID">No Metadata Documentation available.</param>
        /// <param name="conversationID">No Metadata Documentation available.</param>
        /// <param name="offerType">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Guid>> GetLastTwoOffersIDs(Nullable<global::System.Guid> negotiationID, Nullable<global::System.Guid> conversationID, Nullable<global::System.Byte> offerType)
        {
            ObjectParameter negotiationIDParameter;
            if (negotiationID.HasValue)
            {
                negotiationIDParameter = new ObjectParameter("NegotiationID", negotiationID);
            }
            else
            {
                negotiationIDParameter = new ObjectParameter("NegotiationID", typeof(global::System.Guid));
            }
    
            ObjectParameter conversationIDParameter;
            if (conversationID.HasValue)
            {
                conversationIDParameter = new ObjectParameter("ConversationID", conversationID);
            }
            else
            {
                conversationIDParameter = new ObjectParameter("ConversationID", typeof(global::System.Guid));
            }
    
            ObjectParameter offerTypeParameter;
            if (offerType.HasValue)
            {
                offerTypeParameter = new ObjectParameter("OfferType", offerType);
            }
            else
            {
                offerTypeParameter = new ObjectParameter("OfferType", typeof(global::System.Byte));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Guid>>("GetLastTwoOffersIDs", negotiationIDParameter, conversationIDParameter, offerTypeParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="conversationMessageID">No Metadata Documentation available.</param>
        public ObjectResult<OfferItem_Result> GetOfferDetailsForConversationMessage(Nullable<global::System.Guid> conversationMessageID)
        {
            ObjectParameter conversationMessageIDParameter;
            if (conversationMessageID.HasValue)
            {
                conversationMessageIDParameter = new ObjectParameter("ConversationMessageID", conversationMessageID);
            }
            else
            {
                conversationMessageIDParameter = new ObjectParameter("ConversationMessageID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<OfferItem_Result>("GetOfferDetailsForConversationMessage", conversationMessageIDParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrefAppModel", Name="ActionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActionType object.
        /// </summary>
        /// <param name="actionTypeID">Initial value of the ActionTypeID property.</param>
        /// <param name="actionName">Initial value of the ActionName property.</param>
        public static ActionType CreateActionType(global::System.Guid actionTypeID, global::System.String actionName)
        {
            ActionType actionType = new ActionType();
            actionType.ActionTypeID = actionTypeID;
            actionType.ActionName = actionName;
            return actionType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ActionTypeID
        {
            get
            {
                return _ActionTypeID;
            }
            set
            {
                if (_ActionTypeID != value)
                {
                    OnActionTypeIDChanging(value);
                    ReportPropertyChanging("ActionTypeID");
                    _ActionTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActionTypeID");
                    OnActionTypeIDChanged();
                }
            }
        }
        private global::System.Guid _ActionTypeID;
        partial void OnActionTypeIDChanging(global::System.Guid value);
        partial void OnActionTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActionName
        {
            get
            {
                return _ActionName;
            }
            set
            {
                OnActionNameChanging(value);
                ReportPropertyChanging("ActionName");
                _ActionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ActionName");
                OnActionNameChanged();
            }
        }
        private global::System.String _ActionName;
        partial void OnActionNameChanging(global::System.String value);
        partial void OnActionNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__History__ActionT__2C3393D01", "History1")]
        public EntityCollection<History> Histories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<History>("PrefAppModel.FK__History__ActionT__2C3393D01", "History1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<History>("PrefAppModel.FK__History__ActionT__2C3393D01", "History1", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrefAppModel", Name="C__RefactorLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class C__RefactorLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new C__RefactorLog object.
        /// </summary>
        /// <param name="operationKey">Initial value of the OperationKey property.</param>
        public static C__RefactorLog CreateC__RefactorLog(global::System.Guid operationKey)
        {
            C__RefactorLog c__RefactorLog = new C__RefactorLog();
            c__RefactorLog.OperationKey = operationKey;
            return c__RefactorLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OperationKey
        {
            get
            {
                return _OperationKey;
            }
            set
            {
                if (_OperationKey != value)
                {
                    OnOperationKeyChanging(value);
                    ReportPropertyChanging("OperationKey");
                    _OperationKey = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OperationKey");
                    OnOperationKeyChanged();
                }
            }
        }
        private global::System.Guid _OperationKey;
        partial void OnOperationKeyChanging(global::System.Guid value);
        partial void OnOperationKeyChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrefAppModel", Name="ConversationMessage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ConversationMessage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ConversationMessage object.
        /// </summary>
        /// <param name="conversationMessageID">Initial value of the ConversationMessageID property.</param>
        /// <param name="negConversationID">Initial value of the NegConversationID property.</param>
        /// <param name="isExceedVariation">Initial value of the IsExceedVariation property.</param>
        public static ConversationMessage CreateConversationMessage(global::System.Guid conversationMessageID, global::System.Guid negConversationID, global::System.Boolean isExceedVariation)
        {
            ConversationMessage conversationMessage = new ConversationMessage();
            conversationMessage.ConversationMessageID = conversationMessageID;
            conversationMessage.NegConversationID = negConversationID;
            conversationMessage.IsExceedVariation = isExceedVariation;
            return conversationMessage;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ConversationMessageID
        {
            get
            {
                return _ConversationMessageID;
            }
            set
            {
                if (_ConversationMessageID != value)
                {
                    OnConversationMessageIDChanging(value);
                    ReportPropertyChanging("ConversationMessageID");
                    _ConversationMessageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ConversationMessageID");
                    OnConversationMessageIDChanged();
                }
            }
        }
        private global::System.Guid _ConversationMessageID;
        partial void OnConversationMessageIDChanging(global::System.Guid value);
        partial void OnConversationMessageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> MessageID
        {
            get
            {
                return _MessageID;
            }
            set
            {
                OnMessageIDChanging(value);
                ReportPropertyChanging("MessageID");
                _MessageID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageID");
                OnMessageIDChanged();
            }
        }
        private Nullable<global::System.Guid> _MessageID;
        partial void OnMessageIDChanging(Nullable<global::System.Guid> value);
        partial void OnMessageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Percentage
        {
            get
            {
                return _Percentage;
            }
            set
            {
                OnPercentageChanging(value);
                ReportPropertyChanging("Percentage");
                _Percentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentage");
                OnPercentageChanged();
            }
        }
        private Nullable<global::System.Decimal> _Percentage;
        partial void OnPercentageChanging(Nullable<global::System.Decimal> value);
        partial void OnPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid NegConversationID
        {
            get
            {
                return _NegConversationID;
            }
            set
            {
                OnNegConversationIDChanging(value);
                ReportPropertyChanging("NegConversationID");
                _NegConversationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NegConversationID");
                OnNegConversationIDChanged();
            }
        }
        private global::System.Guid _NegConversationID;
        partial void OnNegConversationIDChanging(global::System.Guid value);
        partial void OnNegConversationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DeletedBy
        {
            get
            {
                return _DeletedBy;
            }
            set
            {
                OnDeletedByChanging(value);
                ReportPropertyChanging("DeletedBy");
                _DeletedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedBy");
                OnDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _DeletedBy;
        partial void OnDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedOn
        {
            get
            {
                return _DeletedOn;
            }
            set
            {
                OnDeletedOnChanging(value);
                ReportPropertyChanging("DeletedOn");
                _DeletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedOn");
                OnDeletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedOn;
        partial void OnDeletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RatedDate
        {
            get
            {
                return _RatedDate;
            }
            set
            {
                OnRatedDateChanging(value);
                ReportPropertyChanging("RatedDate");
                _RatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RatedDate");
                OnRatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RatedDate;
        partial void OnRatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsSent
        {
            get
            {
                return _IsSent;
            }
            set
            {
                OnIsSentChanging(value);
                ReportPropertyChanging("IsSent");
                _IsSent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSent");
                OnIsSentChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsSent;
        partial void OnIsSentChanging(Nullable<global::System.Boolean> value);
        partial void OnIsSentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsExceedVariation
        {
            get
            {
                return _IsExceedVariation;
            }
            set
            {
                OnIsExceedVariationChanging(value);
                ReportPropertyChanging("IsExceedVariation");
                _IsExceedVariation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsExceedVariation");
                OnIsExceedVariationChanged();
            }
        }
        private global::System.Boolean _IsExceedVariation;
        partial void OnIsExceedVariationChanging(global::System.Boolean value);
        partial void OnIsExceedVariationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__Conversat__NegCo__0E6E26BF", "NegConversation")]
        public NegConversation NegConversation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NegConversation>("PrefAppModel.FK__Conversat__NegCo__0E6E26BF", "NegConversation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NegConversation>("PrefAppModel.FK__Conversat__NegCo__0E6E26BF", "NegConversation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NegConversation> NegConversationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NegConversation>("PrefAppModel.FK__Conversat__NegCo__0E6E26BF", "NegConversation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NegConversation>("PrefAppModel.FK__Conversat__NegCo__0E6E26BF", "NegConversation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__MessageIs__Conve__0F624AF8", "MessageIssue")]
        public EntityCollection<MessageIssue> MessageIssues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MessageIssue>("PrefAppModel.FK__MessageIs__Conve__0F624AF8", "MessageIssue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MessageIssue>("PrefAppModel.FK__MessageIs__Conve__0F624AF8", "MessageIssue", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrefAppModel", Name="HighValuesNeg")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class HighValuesNeg : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new HighValuesNeg object.
        /// </summary>
        /// <param name="negotiationName">Initial value of the NegotiationName property.</param>
        /// <param name="preferenceSetName">Initial value of the PreferenceSetName property.</param>
        /// <param name="negID">Initial value of the NegID property.</param>
        public static HighValuesNeg CreateHighValuesNeg(global::System.String negotiationName, global::System.String preferenceSetName, global::System.Guid negID)
        {
            HighValuesNeg highValuesNeg = new HighValuesNeg();
            highValuesNeg.NegotiationName = negotiationName;
            highValuesNeg.PreferenceSetName = preferenceSetName;
            highValuesNeg.NegID = negID;
            return highValuesNeg;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NegotiationName
        {
            get
            {
                return _NegotiationName;
            }
            set
            {
                if (_NegotiationName != value)
                {
                    OnNegotiationNameChanging(value);
                    ReportPropertyChanging("NegotiationName");
                    _NegotiationName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("NegotiationName");
                    OnNegotiationNameChanged();
                }
            }
        }
        private global::System.String _NegotiationName;
        partial void OnNegotiationNameChanging(global::System.String value);
        partial void OnNegotiationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PreferenceSetName
        {
            get
            {
                return _PreferenceSetName;
            }
            set
            {
                if (_PreferenceSetName != value)
                {
                    OnPreferenceSetNameChanging(value);
                    ReportPropertyChanging("PreferenceSetName");
                    _PreferenceSetName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PreferenceSetName");
                    OnPreferenceSetNameChanged();
                }
            }
        }
        private global::System.String _PreferenceSetName;
        partial void OnPreferenceSetNameChanging(global::System.String value);
        partial void OnPreferenceSetNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CounterPartsCount
        {
            get
            {
                return _CounterPartsCount;
            }
            set
            {
                OnCounterPartsCountChanging(value);
                ReportPropertyChanging("CounterPartsCount");
                _CounterPartsCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CounterPartsCount");
                OnCounterPartsCountChanged();
            }
        }
        private Nullable<global::System.Int32> _CounterPartsCount;
        partial void OnCounterPartsCountChanging(Nullable<global::System.Int32> value);
        partial void OnCounterPartsCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid NegID
        {
            get
            {
                return _NegID;
            }
            set
            {
                if (_NegID != value)
                {
                    OnNegIDChanging(value);
                    ReportPropertyChanging("NegID");
                    _NegID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NegID");
                    OnNegIDChanged();
                }
            }
        }
        private global::System.Guid _NegID;
        partial void OnNegIDChanging(global::System.Guid value);
        partial void OnNegIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrefAppModel", Name="History")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class History : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new History object.
        /// </summary>
        /// <param name="sN">Initial value of the SN property.</param>
        /// <param name="tableName">Initial value of the TableName property.</param>
        /// <param name="actionTypeID">Initial value of the ActionTypeID property.</param>
        /// <param name="oldValue">Initial value of the OldValue property.</param>
        /// <param name="newValue">Initial value of the NewValue property.</param>
        /// <param name="doneBy">Initial value of the DoneBy property.</param>
        /// <param name="actionDate">Initial value of the ActionDate property.</param>
        public static History CreateHistory(global::System.Guid sN, global::System.String tableName, global::System.Guid actionTypeID, global::System.String oldValue, global::System.String newValue, global::System.Guid doneBy, global::System.DateTime actionDate)
        {
            History history = new History();
            history.SN = sN;
            history.TableName = tableName;
            history.ActionTypeID = actionTypeID;
            history.OldValue = oldValue;
            history.NewValue = newValue;
            history.DoneBy = doneBy;
            history.ActionDate = actionDate;
            return history;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SN
        {
            get
            {
                return _SN;
            }
            set
            {
                if (_SN != value)
                {
                    OnSNChanging(value);
                    ReportPropertyChanging("SN");
                    _SN = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SN");
                    OnSNChanged();
                }
            }
        }
        private global::System.Guid _SN;
        partial void OnSNChanging(global::System.Guid value);
        partial void OnSNChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TableName
        {
            get
            {
                return _TableName;
            }
            set
            {
                OnTableNameChanging(value);
                ReportPropertyChanging("TableName");
                _TableName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TableName");
                OnTableNameChanged();
            }
        }
        private global::System.String _TableName;
        partial void OnTableNameChanging(global::System.String value);
        partial void OnTableNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ActionTypeID
        {
            get
            {
                return _ActionTypeID;
            }
            set
            {
                OnActionTypeIDChanging(value);
                ReportPropertyChanging("ActionTypeID");
                _ActionTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActionTypeID");
                OnActionTypeIDChanged();
            }
        }
        private global::System.Guid _ActionTypeID;
        partial void OnActionTypeIDChanging(global::System.Guid value);
        partial void OnActionTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OldValue
        {
            get
            {
                return _OldValue;
            }
            set
            {
                OnOldValueChanging(value);
                ReportPropertyChanging("OldValue");
                _OldValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OldValue");
                OnOldValueChanged();
            }
        }
        private global::System.String _OldValue;
        partial void OnOldValueChanging(global::System.String value);
        partial void OnOldValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NewValue
        {
            get
            {
                return _NewValue;
            }
            set
            {
                OnNewValueChanging(value);
                ReportPropertyChanging("NewValue");
                _NewValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NewValue");
                OnNewValueChanged();
            }
        }
        private global::System.String _NewValue;
        partial void OnNewValueChanging(global::System.String value);
        partial void OnNewValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid DoneBy
        {
            get
            {
                return _DoneBy;
            }
            set
            {
                OnDoneByChanging(value);
                ReportPropertyChanging("DoneBy");
                _DoneBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DoneBy");
                OnDoneByChanged();
            }
        }
        private global::System.Guid _DoneBy;
        partial void OnDoneByChanging(global::System.Guid value);
        partial void OnDoneByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ActionDate
        {
            get
            {
                return _ActionDate;
            }
            set
            {
                OnActionDateChanging(value);
                ReportPropertyChanging("ActionDate");
                _ActionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActionDate");
                OnActionDateChanged();
            }
        }
        private global::System.DateTime _ActionDate;
        partial void OnActionDateChanging(global::System.DateTime value);
        partial void OnActionDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__History__ActionT__2C3393D01", "ActionType")]
        public ActionType ActionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActionType>("PrefAppModel.FK__History__ActionT__2C3393D01", "ActionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActionType>("PrefAppModel.FK__History__ActionT__2C3393D01", "ActionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ActionType> ActionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActionType>("PrefAppModel.FK__History__ActionT__2C3393D01", "ActionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ActionType>("PrefAppModel.FK__History__ActionT__2C3393D01", "ActionType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrefAppModel", Name="Issue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Issue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Issue object.
        /// </summary>
        /// <param name="issueID">Initial value of the IssueID property.</param>
        /// <param name="issueName">Initial value of the IssueName property.</param>
        /// <param name="preferenceSetID">Initial value of the PreferenceSetID property.</param>
        /// <param name="issueTypeID">Initial value of the IssueTypeID property.</param>
        /// <param name="issueWeight">Initial value of the IssueWeight property.</param>
        public static Issue CreateIssue(global::System.Guid issueID, global::System.String issueName, global::System.Guid preferenceSetID, global::System.Guid issueTypeID, global::System.Decimal issueWeight)
        {
            Issue issue = new Issue();
            issue.IssueID = issueID;
            issue.IssueName = issueName;
            issue.PreferenceSetID = preferenceSetID;
            issue.IssueTypeID = issueTypeID;
            issue.IssueWeight = issueWeight;
            return issue;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IssueID
        {
            get
            {
                return _IssueID;
            }
            set
            {
                if (_IssueID != value)
                {
                    OnIssueIDChanging(value);
                    ReportPropertyChanging("IssueID");
                    _IssueID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IssueID");
                    OnIssueIDChanged();
                }
            }
        }
        private global::System.Guid _IssueID;
        partial void OnIssueIDChanging(global::System.Guid value);
        partial void OnIssueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IssueName
        {
            get
            {
                return _IssueName;
            }
            set
            {
                OnIssueNameChanging(value);
                ReportPropertyChanging("IssueName");
                _IssueName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IssueName");
                OnIssueNameChanged();
            }
        }
        private global::System.String _IssueName;
        partial void OnIssueNameChanging(global::System.String value);
        partial void OnIssueNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PreferenceSetID
        {
            get
            {
                return _PreferenceSetID;
            }
            set
            {
                OnPreferenceSetIDChanging(value);
                ReportPropertyChanging("PreferenceSetID");
                _PreferenceSetID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreferenceSetID");
                OnPreferenceSetIDChanged();
            }
        }
        private global::System.Guid _PreferenceSetID;
        partial void OnPreferenceSetIDChanging(global::System.Guid value);
        partial void OnPreferenceSetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IssueTypeID
        {
            get
            {
                return _IssueTypeID;
            }
            set
            {
                OnIssueTypeIDChanging(value);
                ReportPropertyChanging("IssueTypeID");
                _IssueTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueTypeID");
                OnIssueTypeIDChanged();
            }
        }
        private global::System.Guid _IssueTypeID;
        partial void OnIssueTypeIDChanging(global::System.Guid value);
        partial void OnIssueTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal IssueWeight
        {
            get
            {
                return _IssueWeight;
            }
            set
            {
                OnIssueWeightChanging(value);
                ReportPropertyChanging("IssueWeight");
                _IssueWeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueWeight");
                OnIssueWeightChanged();
            }
        }
        private global::System.Decimal _IssueWeight;
        partial void OnIssueWeightChanging(global::System.Decimal value);
        partial void OnIssueWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DeletedBy
        {
            get
            {
                return _DeletedBy;
            }
            set
            {
                OnDeletedByChanging(value);
                ReportPropertyChanging("DeletedBy");
                _DeletedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedBy");
                OnDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _DeletedBy;
        partial void OnDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedOn
        {
            get
            {
                return _DeletedOn;
            }
            set
            {
                OnDeletedOnChanging(value);
                ReportPropertyChanging("DeletedOn");
                _DeletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedOn");
                OnDeletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedOn;
        partial void OnDeletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedOnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__Issue__IssueType__2E1BDC421", "IssueType")]
        public IssueType IssueType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueType>("PrefAppModel.FK__Issue__IssueType__2E1BDC421", "IssueType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueType>("PrefAppModel.FK__Issue__IssueType__2E1BDC421", "IssueType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IssueType> IssueTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IssueType>("PrefAppModel.FK__Issue__IssueType__2E1BDC421", "IssueType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IssueType>("PrefAppModel.FK__Issue__IssueType__2E1BDC421", "IssueType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__Issue__Preferenc__2D27B8091", "PreferenceSet1")]
        public PreferenceSet PreferenceSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PreferenceSet>("PrefAppModel.FK__Issue__Preferenc__2D27B8091", "PreferenceSet1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PreferenceSet>("PrefAppModel.FK__Issue__Preferenc__2D27B8091", "PreferenceSet1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PreferenceSet> PreferenceSetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PreferenceSet>("PrefAppModel.FK__Issue__Preferenc__2D27B8091", "PreferenceSet1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PreferenceSet>("PrefAppModel.FK__Issue__Preferenc__2D27B8091", "PreferenceSet1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__LaterRate__Issue__2F10007B1", "LaterRatedIssue1")]
        public EntityCollection<LaterRatedIssue> LaterRatedIssues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<LaterRatedIssue>("PrefAppModel.FK__LaterRate__Issue__2F10007B1", "LaterRatedIssue1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<LaterRatedIssue>("PrefAppModel.FK__LaterRate__Issue__2F10007B1", "LaterRatedIssue1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__NumericIs__Issue__30F848ED1", "NumericIssue1")]
        public EntityCollection<NumericIssue> NumericIssues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NumericIssue>("PrefAppModel.FK__NumericIs__Issue__30F848ED1", "NumericIssue1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NumericIssue>("PrefAppModel.FK__NumericIs__Issue__30F848ED1", "NumericIssue1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__OptionIss__Issue__31EC6D261", "OptionIssue1")]
        public EntityCollection<OptionIssue> OptionIssues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OptionIssue>("PrefAppModel.FK__OptionIss__Issue__31EC6D261", "OptionIssue1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OptionIssue>("PrefAppModel.FK__OptionIss__Issue__31EC6D261", "OptionIssue1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__MessageIs__Issue__10566F31", "MessageIssue")]
        public EntityCollection<MessageIssue> MessageIssues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MessageIssue>("PrefAppModel.FK__MessageIs__Issue__10566F31", "MessageIssue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MessageIssue>("PrefAppModel.FK__MessageIs__Issue__10566F31", "MessageIssue", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrefAppModel", Name="IssueHistoryView")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IssueHistoryView : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IssueHistoryView object.
        /// </summary>
        /// <param name="issueName">Initial value of the IssueName property.</param>
        /// <param name="preferenceSetName">Initial value of the PreferenceSetName property.</param>
        /// <param name="negotiationName">Initial value of the NegotiationName property.</param>
        /// <param name="issueWeight">Initial value of the IssueWeight property.</param>
        /// <param name="negID">Initial value of the NegID property.</param>
        public static IssueHistoryView CreateIssueHistoryView(global::System.String issueName, global::System.String preferenceSetName, global::System.String negotiationName, global::System.Decimal issueWeight, global::System.Guid negID)
        {
            IssueHistoryView issueHistoryView = new IssueHistoryView();
            issueHistoryView.IssueName = issueName;
            issueHistoryView.PreferenceSetName = preferenceSetName;
            issueHistoryView.NegotiationName = negotiationName;
            issueHistoryView.IssueWeight = issueWeight;
            issueHistoryView.NegID = negID;
            return issueHistoryView;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IssueName
        {
            get
            {
                return _IssueName;
            }
            set
            {
                if (_IssueName != value)
                {
                    OnIssueNameChanging(value);
                    ReportPropertyChanging("IssueName");
                    _IssueName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("IssueName");
                    OnIssueNameChanged();
                }
            }
        }
        private global::System.String _IssueName;
        partial void OnIssueNameChanging(global::System.String value);
        partial void OnIssueNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PreferenceSetName
        {
            get
            {
                return _PreferenceSetName;
            }
            set
            {
                if (_PreferenceSetName != value)
                {
                    OnPreferenceSetNameChanging(value);
                    ReportPropertyChanging("PreferenceSetName");
                    _PreferenceSetName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("PreferenceSetName");
                    OnPreferenceSetNameChanged();
                }
            }
        }
        private global::System.String _PreferenceSetName;
        partial void OnPreferenceSetNameChanging(global::System.String value);
        partial void OnPreferenceSetNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NegotiationName
        {
            get
            {
                return _NegotiationName;
            }
            set
            {
                if (_NegotiationName != value)
                {
                    OnNegotiationNameChanging(value);
                    ReportPropertyChanging("NegotiationName");
                    _NegotiationName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("NegotiationName");
                    OnNegotiationNameChanged();
                }
            }
        }
        private global::System.String _NegotiationName;
        partial void OnNegotiationNameChanging(global::System.String value);
        partial void OnNegotiationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal IssueWeight
        {
            get
            {
                return _IssueWeight;
            }
            set
            {
                if (_IssueWeight != value)
                {
                    OnIssueWeightChanging(value);
                    ReportPropertyChanging("IssueWeight");
                    _IssueWeight = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IssueWeight");
                    OnIssueWeightChanged();
                }
            }
        }
        private global::System.Decimal _IssueWeight;
        partial void OnIssueWeightChanging(global::System.Decimal value);
        partial void OnIssueWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid NegID
        {
            get
            {
                return _NegID;
            }
            set
            {
                if (_NegID != value)
                {
                    OnNegIDChanging(value);
                    ReportPropertyChanging("NegID");
                    _NegID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NegID");
                    OnNegIDChanged();
                }
            }
        }
        private global::System.Guid _NegID;
        partial void OnNegIDChanging(global::System.Guid value);
        partial void OnNegIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrefAppModel", Name="IssueType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IssueType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IssueType object.
        /// </summary>
        /// <param name="issueTypeID">Initial value of the IssueTypeID property.</param>
        /// <param name="issueTypeName">Initial value of the IssueTypeName property.</param>
        public static IssueType CreateIssueType(global::System.Guid issueTypeID, global::System.String issueTypeName)
        {
            IssueType issueType = new IssueType();
            issueType.IssueTypeID = issueTypeID;
            issueType.IssueTypeName = issueTypeName;
            return issueType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IssueTypeID
        {
            get
            {
                return _IssueTypeID;
            }
            set
            {
                if (_IssueTypeID != value)
                {
                    OnIssueTypeIDChanging(value);
                    ReportPropertyChanging("IssueTypeID");
                    _IssueTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IssueTypeID");
                    OnIssueTypeIDChanged();
                }
            }
        }
        private global::System.Guid _IssueTypeID;
        partial void OnIssueTypeIDChanging(global::System.Guid value);
        partial void OnIssueTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IssueTypeName
        {
            get
            {
                return _IssueTypeName;
            }
            set
            {
                OnIssueTypeNameChanging(value);
                ReportPropertyChanging("IssueTypeName");
                _IssueTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IssueTypeName");
                OnIssueTypeNameChanged();
            }
        }
        private global::System.String _IssueTypeName;
        partial void OnIssueTypeNameChanging(global::System.String value);
        partial void OnIssueTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__Issue__IssueType__2E1BDC421", "Issue1")]
        public EntityCollection<Issue> Issues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Issue>("PrefAppModel.FK__Issue__IssueType__2E1BDC421", "Issue1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Issue>("PrefAppModel.FK__Issue__IssueType__2E1BDC421", "Issue1", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrefAppModel", Name="LaterRatedIssue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LaterRatedIssue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LaterRatedIssue object.
        /// </summary>
        /// <param name="laterRatedIssueID">Initial value of the LaterRatedIssueID property.</param>
        /// <param name="laterRatedIssueValue">Initial value of the LaterRatedIssueValue property.</param>
        /// <param name="issueID">Initial value of the IssueID property.</param>
        /// <param name="laterRatedIssueWeight">Initial value of the LaterRatedIssueWeight property.</param>
        public static LaterRatedIssue CreateLaterRatedIssue(global::System.Guid laterRatedIssueID, global::System.String laterRatedIssueValue, global::System.Guid issueID, global::System.Decimal laterRatedIssueWeight)
        {
            LaterRatedIssue laterRatedIssue = new LaterRatedIssue();
            laterRatedIssue.LaterRatedIssueID = laterRatedIssueID;
            laterRatedIssue.LaterRatedIssueValue = laterRatedIssueValue;
            laterRatedIssue.IssueID = issueID;
            laterRatedIssue.LaterRatedIssueWeight = laterRatedIssueWeight;
            return laterRatedIssue;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LaterRatedIssueID
        {
            get
            {
                return _LaterRatedIssueID;
            }
            set
            {
                if (_LaterRatedIssueID != value)
                {
                    OnLaterRatedIssueIDChanging(value);
                    ReportPropertyChanging("LaterRatedIssueID");
                    _LaterRatedIssueID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LaterRatedIssueID");
                    OnLaterRatedIssueIDChanged();
                }
            }
        }
        private global::System.Guid _LaterRatedIssueID;
        partial void OnLaterRatedIssueIDChanging(global::System.Guid value);
        partial void OnLaterRatedIssueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LaterRatedIssueValue
        {
            get
            {
                return _LaterRatedIssueValue;
            }
            set
            {
                OnLaterRatedIssueValueChanging(value);
                ReportPropertyChanging("LaterRatedIssueValue");
                _LaterRatedIssueValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LaterRatedIssueValue");
                OnLaterRatedIssueValueChanged();
            }
        }
        private global::System.String _LaterRatedIssueValue;
        partial void OnLaterRatedIssueValueChanging(global::System.String value);
        partial void OnLaterRatedIssueValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IssueID
        {
            get
            {
                return _IssueID;
            }
            set
            {
                OnIssueIDChanging(value);
                ReportPropertyChanging("IssueID");
                _IssueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueID");
                OnIssueIDChanged();
            }
        }
        private global::System.Guid _IssueID;
        partial void OnIssueIDChanging(global::System.Guid value);
        partial void OnIssueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal LaterRatedIssueWeight
        {
            get
            {
                return _LaterRatedIssueWeight;
            }
            set
            {
                OnLaterRatedIssueWeightChanging(value);
                ReportPropertyChanging("LaterRatedIssueWeight");
                _LaterRatedIssueWeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LaterRatedIssueWeight");
                OnLaterRatedIssueWeightChanged();
            }
        }
        private global::System.Decimal _LaterRatedIssueWeight;
        partial void OnLaterRatedIssueWeightChanging(global::System.Decimal value);
        partial void OnLaterRatedIssueWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DeletedBy
        {
            get
            {
                return _DeletedBy;
            }
            set
            {
                OnDeletedByChanging(value);
                ReportPropertyChanging("DeletedBy");
                _DeletedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedBy");
                OnDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _DeletedBy;
        partial void OnDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedOn
        {
            get
            {
                return _DeletedOn;
            }
            set
            {
                OnDeletedOnChanging(value);
                ReportPropertyChanging("DeletedOn");
                _DeletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedOn");
                OnDeletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedOn;
        partial void OnDeletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedOnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__LaterRate__Issue__2F10007B1", "Issue1")]
        public Issue Issue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issue>("PrefAppModel.FK__LaterRate__Issue__2F10007B1", "Issue1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issue>("PrefAppModel.FK__LaterRate__Issue__2F10007B1", "Issue1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Issue> IssueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issue>("PrefAppModel.FK__LaterRate__Issue__2F10007B1", "Issue1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Issue>("PrefAppModel.FK__LaterRate__Issue__2F10007B1", "Issue1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__MessageLa__Later__2645B050", "MessageLaterRatedIssue")]
        public EntityCollection<MessageLaterRatedIssue> MessageLaterRatedIssues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MessageLaterRatedIssue>("PrefAppModel.FK__MessageLa__Later__2645B050", "MessageLaterRatedIssue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MessageLaterRatedIssue>("PrefAppModel.FK__MessageLa__Later__2645B050", "MessageLaterRatedIssue", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrefAppModel", Name="MainPreferenceSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MainPreferenceSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MainPreferenceSet object.
        /// </summary>
        /// <param name="mainPreferenceSetID">Initial value of the MainPreferenceSetID property.</param>
        /// <param name="mainPreferenceSetName">Initial value of the MainPreferenceSetName property.</param>
        public static MainPreferenceSet CreateMainPreferenceSet(global::System.Guid mainPreferenceSetID, global::System.String mainPreferenceSetName)
        {
            MainPreferenceSet mainPreferenceSet = new MainPreferenceSet();
            mainPreferenceSet.MainPreferenceSetID = mainPreferenceSetID;
            mainPreferenceSet.MainPreferenceSetName = mainPreferenceSetName;
            return mainPreferenceSet;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MainPreferenceSetID
        {
            get
            {
                return _MainPreferenceSetID;
            }
            set
            {
                if (_MainPreferenceSetID != value)
                {
                    OnMainPreferenceSetIDChanging(value);
                    ReportPropertyChanging("MainPreferenceSetID");
                    _MainPreferenceSetID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MainPreferenceSetID");
                    OnMainPreferenceSetIDChanged();
                }
            }
        }
        private global::System.Guid _MainPreferenceSetID;
        partial void OnMainPreferenceSetIDChanging(global::System.Guid value);
        partial void OnMainPreferenceSetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MainPreferenceSetName
        {
            get
            {
                return _MainPreferenceSetName;
            }
            set
            {
                OnMainPreferenceSetNameChanging(value);
                ReportPropertyChanging("MainPreferenceSetName");
                _MainPreferenceSetName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MainPreferenceSetName");
                OnMainPreferenceSetNameChanged();
            }
        }
        private global::System.String _MainPreferenceSetName;
        partial void OnMainPreferenceSetNameChanging(global::System.String value);
        partial void OnMainPreferenceSetNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__Preferenc__MainP__32E0915F1", "PreferenceSet1")]
        public EntityCollection<PreferenceSet> PreferenceSets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferenceSet>("PrefAppModel.FK__Preferenc__MainP__32E0915F1", "PreferenceSet1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferenceSet>("PrefAppModel.FK__Preferenc__MainP__32E0915F1", "PreferenceSet1", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrefAppModel", Name="MessageIssue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MessageIssue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MessageIssue object.
        /// </summary>
        /// <param name="messageIssueID">Initial value of the MessageIssueID property.</param>
        /// <param name="conversationMessageID">Initial value of the ConversationMessageID property.</param>
        /// <param name="issueID">Initial value of the IssueID property.</param>
        public static MessageIssue CreateMessageIssue(global::System.Guid messageIssueID, global::System.Guid conversationMessageID, global::System.Guid issueID)
        {
            MessageIssue messageIssue = new MessageIssue();
            messageIssue.MessageIssueID = messageIssueID;
            messageIssue.ConversationMessageID = conversationMessageID;
            messageIssue.IssueID = issueID;
            return messageIssue;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MessageIssueID
        {
            get
            {
                return _MessageIssueID;
            }
            set
            {
                if (_MessageIssueID != value)
                {
                    OnMessageIssueIDChanging(value);
                    ReportPropertyChanging("MessageIssueID");
                    _MessageIssueID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageIssueID");
                    OnMessageIssueIDChanged();
                }
            }
        }
        private global::System.Guid _MessageIssueID;
        partial void OnMessageIssueIDChanging(global::System.Guid value);
        partial void OnMessageIssueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ConversationMessageID
        {
            get
            {
                return _ConversationMessageID;
            }
            set
            {
                OnConversationMessageIDChanging(value);
                ReportPropertyChanging("ConversationMessageID");
                _ConversationMessageID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConversationMessageID");
                OnConversationMessageIDChanged();
            }
        }
        private global::System.Guid _ConversationMessageID;
        partial void OnConversationMessageIDChanging(global::System.Guid value);
        partial void OnConversationMessageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IssueID
        {
            get
            {
                return _IssueID;
            }
            set
            {
                OnIssueIDChanging(value);
                ReportPropertyChanging("IssueID");
                _IssueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueID");
                OnIssueIDChanged();
            }
        }
        private global::System.Guid _IssueID;
        partial void OnIssueIDChanging(global::System.Guid value);
        partial void OnIssueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private Nullable<global::System.Decimal> _Score;
        partial void OnScoreChanging(Nullable<global::System.Decimal> value);
        partial void OnScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DeletedBy
        {
            get
            {
                return _DeletedBy;
            }
            set
            {
                OnDeletedByChanging(value);
                ReportPropertyChanging("DeletedBy");
                _DeletedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedBy");
                OnDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _DeletedBy;
        partial void OnDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedOn
        {
            get
            {
                return _DeletedOn;
            }
            set
            {
                OnDeletedOnChanging(value);
                ReportPropertyChanging("DeletedOn");
                _DeletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedOn");
                OnDeletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedOn;
        partial void OnDeletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedOnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__MessageIs__Conve__0F624AF8", "ConversationMessage")]
        public ConversationMessage ConversationMessage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConversationMessage>("PrefAppModel.FK__MessageIs__Conve__0F624AF8", "ConversationMessage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConversationMessage>("PrefAppModel.FK__MessageIs__Conve__0F624AF8", "ConversationMessage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ConversationMessage> ConversationMessageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ConversationMessage>("PrefAppModel.FK__MessageIs__Conve__0F624AF8", "ConversationMessage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ConversationMessage>("PrefAppModel.FK__MessageIs__Conve__0F624AF8", "ConversationMessage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__MessageIs__Issue__10566F31", "Issue")]
        public Issue Issue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issue>("PrefAppModel.FK__MessageIs__Issue__10566F31", "Issue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issue>("PrefAppModel.FK__MessageIs__Issue__10566F31", "Issue").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Issue> IssueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issue>("PrefAppModel.FK__MessageIs__Issue__10566F31", "Issue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Issue>("PrefAppModel.FK__MessageIs__Issue__10566F31", "Issue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__MessageOp__Messa__123EB7A3", "MessageOptionIssue")]
        public EntityCollection<MessageOptionIssue> MessageOptionIssues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MessageOptionIssue>("PrefAppModel.FK__MessageOp__Messa__123EB7A3", "MessageOptionIssue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MessageOptionIssue>("PrefAppModel.FK__MessageOp__Messa__123EB7A3", "MessageOptionIssue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__MessageLa__Messa__25518C17", "MessageLaterRatedIssue")]
        public EntityCollection<MessageLaterRatedIssue> MessageLaterRatedIssues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MessageLaterRatedIssue>("PrefAppModel.FK__MessageLa__Messa__25518C17", "MessageLaterRatedIssue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MessageLaterRatedIssue>("PrefAppModel.FK__MessageLa__Messa__25518C17", "MessageLaterRatedIssue", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrefAppModel", Name="MessageLaterRatedIssue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MessageLaterRatedIssue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MessageLaterRatedIssue object.
        /// </summary>
        /// <param name="messageLaterRatedIssueID">Initial value of the MessageLaterRatedIssueID property.</param>
        /// <param name="messageIssueID">Initial value of the MessageIssueID property.</param>
        /// <param name="laterRatedIssueID">Initial value of the LaterRatedIssueID property.</param>
        public static MessageLaterRatedIssue CreateMessageLaterRatedIssue(global::System.Guid messageLaterRatedIssueID, global::System.Guid messageIssueID, global::System.Guid laterRatedIssueID)
        {
            MessageLaterRatedIssue messageLaterRatedIssue = new MessageLaterRatedIssue();
            messageLaterRatedIssue.MessageLaterRatedIssueID = messageLaterRatedIssueID;
            messageLaterRatedIssue.MessageIssueID = messageIssueID;
            messageLaterRatedIssue.LaterRatedIssueID = laterRatedIssueID;
            return messageLaterRatedIssue;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MessageLaterRatedIssueID
        {
            get
            {
                return _MessageLaterRatedIssueID;
            }
            set
            {
                if (_MessageLaterRatedIssueID != value)
                {
                    OnMessageLaterRatedIssueIDChanging(value);
                    ReportPropertyChanging("MessageLaterRatedIssueID");
                    _MessageLaterRatedIssueID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageLaterRatedIssueID");
                    OnMessageLaterRatedIssueIDChanged();
                }
            }
        }
        private global::System.Guid _MessageLaterRatedIssueID;
        partial void OnMessageLaterRatedIssueIDChanging(global::System.Guid value);
        partial void OnMessageLaterRatedIssueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MessageIssueID
        {
            get
            {
                return _MessageIssueID;
            }
            set
            {
                OnMessageIssueIDChanging(value);
                ReportPropertyChanging("MessageIssueID");
                _MessageIssueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageIssueID");
                OnMessageIssueIDChanged();
            }
        }
        private global::System.Guid _MessageIssueID;
        partial void OnMessageIssueIDChanging(global::System.Guid value);
        partial void OnMessageIssueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid LaterRatedIssueID
        {
            get
            {
                return _LaterRatedIssueID;
            }
            set
            {
                OnLaterRatedIssueIDChanging(value);
                ReportPropertyChanging("LaterRatedIssueID");
                _LaterRatedIssueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LaterRatedIssueID");
                OnLaterRatedIssueIDChanged();
            }
        }
        private global::System.Guid _LaterRatedIssueID;
        partial void OnLaterRatedIssueIDChanging(global::System.Guid value);
        partial void OnLaterRatedIssueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DeletedBy
        {
            get
            {
                return _DeletedBy;
            }
            set
            {
                OnDeletedByChanging(value);
                ReportPropertyChanging("DeletedBy");
                _DeletedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedBy");
                OnDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _DeletedBy;
        partial void OnDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedOn
        {
            get
            {
                return _DeletedOn;
            }
            set
            {
                OnDeletedOnChanging(value);
                ReportPropertyChanging("DeletedOn");
                _DeletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedOn");
                OnDeletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedOn;
        partial void OnDeletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedOnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__MessageLa__Later__2645B050", "LaterRatedIssue")]
        public LaterRatedIssue LaterRatedIssue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LaterRatedIssue>("PrefAppModel.FK__MessageLa__Later__2645B050", "LaterRatedIssue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LaterRatedIssue>("PrefAppModel.FK__MessageLa__Later__2645B050", "LaterRatedIssue").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<LaterRatedIssue> LaterRatedIssueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<LaterRatedIssue>("PrefAppModel.FK__MessageLa__Later__2645B050", "LaterRatedIssue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<LaterRatedIssue>("PrefAppModel.FK__MessageLa__Later__2645B050", "LaterRatedIssue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__MessageLa__Messa__25518C17", "MessageIssue")]
        public MessageIssue MessageIssue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MessageIssue>("PrefAppModel.FK__MessageLa__Messa__25518C17", "MessageIssue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MessageIssue>("PrefAppModel.FK__MessageLa__Messa__25518C17", "MessageIssue").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MessageIssue> MessageIssueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MessageIssue>("PrefAppModel.FK__MessageLa__Messa__25518C17", "MessageIssue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MessageIssue>("PrefAppModel.FK__MessageLa__Messa__25518C17", "MessageIssue", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrefAppModel", Name="MessageOptionIssue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MessageOptionIssue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MessageOptionIssue object.
        /// </summary>
        /// <param name="messageOptionIssueID">Initial value of the MessageOptionIssueID property.</param>
        /// <param name="messageIssueID">Initial value of the MessageIssueID property.</param>
        /// <param name="optionIssueID">Initial value of the OptionIssueID property.</param>
        public static MessageOptionIssue CreateMessageOptionIssue(global::System.Guid messageOptionIssueID, global::System.Guid messageIssueID, global::System.Guid optionIssueID)
        {
            MessageOptionIssue messageOptionIssue = new MessageOptionIssue();
            messageOptionIssue.MessageOptionIssueID = messageOptionIssueID;
            messageOptionIssue.MessageIssueID = messageIssueID;
            messageOptionIssue.OptionIssueID = optionIssueID;
            return messageOptionIssue;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MessageOptionIssueID
        {
            get
            {
                return _MessageOptionIssueID;
            }
            set
            {
                if (_MessageOptionIssueID != value)
                {
                    OnMessageOptionIssueIDChanging(value);
                    ReportPropertyChanging("MessageOptionIssueID");
                    _MessageOptionIssueID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MessageOptionIssueID");
                    OnMessageOptionIssueIDChanged();
                }
            }
        }
        private global::System.Guid _MessageOptionIssueID;
        partial void OnMessageOptionIssueIDChanging(global::System.Guid value);
        partial void OnMessageOptionIssueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MessageIssueID
        {
            get
            {
                return _MessageIssueID;
            }
            set
            {
                OnMessageIssueIDChanging(value);
                ReportPropertyChanging("MessageIssueID");
                _MessageIssueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessageIssueID");
                OnMessageIssueIDChanged();
            }
        }
        private global::System.Guid _MessageIssueID;
        partial void OnMessageIssueIDChanging(global::System.Guid value);
        partial void OnMessageIssueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OptionIssueID
        {
            get
            {
                return _OptionIssueID;
            }
            set
            {
                OnOptionIssueIDChanging(value);
                ReportPropertyChanging("OptionIssueID");
                _OptionIssueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OptionIssueID");
                OnOptionIssueIDChanged();
            }
        }
        private global::System.Guid _OptionIssueID;
        partial void OnOptionIssueIDChanging(global::System.Guid value);
        partial void OnOptionIssueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DeletedBy
        {
            get
            {
                return _DeletedBy;
            }
            set
            {
                OnDeletedByChanging(value);
                ReportPropertyChanging("DeletedBy");
                _DeletedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedBy");
                OnDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _DeletedBy;
        partial void OnDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedOn
        {
            get
            {
                return _DeletedOn;
            }
            set
            {
                OnDeletedOnChanging(value);
                ReportPropertyChanging("DeletedOn");
                _DeletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedOn");
                OnDeletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedOn;
        partial void OnDeletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedOnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__MessageOp__Optio__72C60C4A", "OptionIssue")]
        public OptionIssue OptionIssue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OptionIssue>("PrefAppModel.FK__MessageOp__Optio__72C60C4A", "OptionIssue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OptionIssue>("PrefAppModel.FK__MessageOp__Optio__72C60C4A", "OptionIssue").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OptionIssue> OptionIssueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OptionIssue>("PrefAppModel.FK__MessageOp__Optio__72C60C4A", "OptionIssue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OptionIssue>("PrefAppModel.FK__MessageOp__Optio__72C60C4A", "OptionIssue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__MessageOp__Messa__123EB7A3", "MessageIssue")]
        public MessageIssue MessageIssue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MessageIssue>("PrefAppModel.FK__MessageOp__Messa__123EB7A3", "MessageIssue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MessageIssue>("PrefAppModel.FK__MessageOp__Messa__123EB7A3", "MessageIssue").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MessageIssue> MessageIssueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MessageIssue>("PrefAppModel.FK__MessageOp__Messa__123EB7A3", "MessageIssue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MessageIssue>("PrefAppModel.FK__MessageOp__Messa__123EB7A3", "MessageIssue", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrefAppModel", Name="NegConversation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NegConversation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NegConversation object.
        /// </summary>
        /// <param name="negConversationID">Initial value of the NegConversationID property.</param>
        /// <param name="percentage">Initial value of the Percentage property.</param>
        /// <param name="preferenceSetNegID">Initial value of the PreferenceSetNegID property.</param>
        public static NegConversation CreateNegConversation(global::System.Guid negConversationID, global::System.Decimal percentage, global::System.Guid preferenceSetNegID)
        {
            NegConversation negConversation = new NegConversation();
            negConversation.NegConversationID = negConversationID;
            negConversation.Percentage = percentage;
            negConversation.PreferenceSetNegID = preferenceSetNegID;
            return negConversation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid NegConversationID
        {
            get
            {
                return _NegConversationID;
            }
            set
            {
                if (_NegConversationID != value)
                {
                    OnNegConversationIDChanging(value);
                    ReportPropertyChanging("NegConversationID");
                    _NegConversationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NegConversationID");
                    OnNegConversationIDChanged();
                }
            }
        }
        private global::System.Guid _NegConversationID;
        partial void OnNegConversationIDChanging(global::System.Guid value);
        partial void OnNegConversationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ConversationID
        {
            get
            {
                return _ConversationID;
            }
            set
            {
                OnConversationIDChanging(value);
                ReportPropertyChanging("ConversationID");
                _ConversationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConversationID");
                OnConversationIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ConversationID;
        partial void OnConversationIDChanging(Nullable<global::System.Guid> value);
        partial void OnConversationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Percentage
        {
            get
            {
                return _Percentage;
            }
            set
            {
                OnPercentageChanging(value);
                ReportPropertyChanging("Percentage");
                _Percentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentage");
                OnPercentageChanged();
            }
        }
        private global::System.Decimal _Percentage;
        partial void OnPercentageChanging(global::System.Decimal value);
        partial void OnPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PreferenceSetNegID
        {
            get
            {
                return _PreferenceSetNegID;
            }
            set
            {
                OnPreferenceSetNegIDChanging(value);
                ReportPropertyChanging("PreferenceSetNegID");
                _PreferenceSetNegID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreferenceSetNegID");
                OnPreferenceSetNegIDChanged();
            }
        }
        private global::System.Guid _PreferenceSetNegID;
        partial void OnPreferenceSetNegIDChanging(global::System.Guid value);
        partial void OnPreferenceSetNegIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DeletedBy
        {
            get
            {
                return _DeletedBy;
            }
            set
            {
                OnDeletedByChanging(value);
                ReportPropertyChanging("DeletedBy");
                _DeletedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedBy");
                OnDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _DeletedBy;
        partial void OnDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedOn
        {
            get
            {
                return _DeletedOn;
            }
            set
            {
                OnDeletedOnChanging(value);
                ReportPropertyChanging("DeletedOn");
                _DeletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedOn");
                OnDeletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedOn;
        partial void OnDeletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedOnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__Conversat__NegCo__0E6E26BF", "ConversationMessage")]
        public EntityCollection<ConversationMessage> ConversationMessages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ConversationMessage>("PrefAppModel.FK__Conversat__NegCo__0E6E26BF", "ConversationMessage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ConversationMessage>("PrefAppModel.FK__Conversat__NegCo__0E6E26BF", "ConversationMessage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__NegConver__Prefe__1332DBDC", "PreferenceSetNeg")]
        public PreferenceSetNeg PreferenceSetNeg
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PreferenceSetNeg>("PrefAppModel.FK__NegConver__Prefe__1332DBDC", "PreferenceSetNeg").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PreferenceSetNeg>("PrefAppModel.FK__NegConver__Prefe__1332DBDC", "PreferenceSetNeg").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PreferenceSetNeg> PreferenceSetNegReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PreferenceSetNeg>("PrefAppModel.FK__NegConver__Prefe__1332DBDC", "PreferenceSetNeg");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PreferenceSetNeg>("PrefAppModel.FK__NegConver__Prefe__1332DBDC", "PreferenceSetNeg", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrefAppModel", Name="NumericIssue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NumericIssue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NumericIssue object.
        /// </summary>
        /// <param name="numericIssueID">Initial value of the NumericIssueID property.</param>
        /// <param name="issueID">Initial value of the IssueID property.</param>
        /// <param name="minimumValue">Initial value of the MinimumValue property.</param>
        /// <param name="maximumValue">Initial value of the MaximumValue property.</param>
        /// <param name="optimumValueStart">Initial value of the OptimumValueStart property.</param>
        /// <param name="optimumValueEnd">Initial value of the OptimumValueEnd property.</param>
        /// <param name="minimumOperator">Initial value of the MinimumOperator property.</param>
        /// <param name="maximumOperator">Initial value of the MaximumOperator property.</param>
        /// <param name="unit">Initial value of the Unit property.</param>
        public static NumericIssue CreateNumericIssue(global::System.Guid numericIssueID, global::System.Guid issueID, global::System.Decimal minimumValue, global::System.Decimal maximumValue, global::System.Decimal optimumValueStart, global::System.Decimal optimumValueEnd, global::System.Byte minimumOperator, global::System.Byte maximumOperator, global::System.String unit)
        {
            NumericIssue numericIssue = new NumericIssue();
            numericIssue.NumericIssueID = numericIssueID;
            numericIssue.IssueID = issueID;
            numericIssue.MinimumValue = minimumValue;
            numericIssue.MaximumValue = maximumValue;
            numericIssue.OptimumValueStart = optimumValueStart;
            numericIssue.OptimumValueEnd = optimumValueEnd;
            numericIssue.MinimumOperator = minimumOperator;
            numericIssue.MaximumOperator = maximumOperator;
            numericIssue.Unit = unit;
            return numericIssue;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid NumericIssueID
        {
            get
            {
                return _NumericIssueID;
            }
            set
            {
                if (_NumericIssueID != value)
                {
                    OnNumericIssueIDChanging(value);
                    ReportPropertyChanging("NumericIssueID");
                    _NumericIssueID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("NumericIssueID");
                    OnNumericIssueIDChanged();
                }
            }
        }
        private global::System.Guid _NumericIssueID;
        partial void OnNumericIssueIDChanging(global::System.Guid value);
        partial void OnNumericIssueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IssueID
        {
            get
            {
                return _IssueID;
            }
            set
            {
                OnIssueIDChanging(value);
                ReportPropertyChanging("IssueID");
                _IssueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueID");
                OnIssueIDChanged();
            }
        }
        private global::System.Guid _IssueID;
        partial void OnIssueIDChanging(global::System.Guid value);
        partial void OnIssueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MinimumValue
        {
            get
            {
                return _MinimumValue;
            }
            set
            {
                OnMinimumValueChanging(value);
                ReportPropertyChanging("MinimumValue");
                _MinimumValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinimumValue");
                OnMinimumValueChanged();
            }
        }
        private global::System.Decimal _MinimumValue;
        partial void OnMinimumValueChanging(global::System.Decimal value);
        partial void OnMinimumValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MaximumValue
        {
            get
            {
                return _MaximumValue;
            }
            set
            {
                OnMaximumValueChanging(value);
                ReportPropertyChanging("MaximumValue");
                _MaximumValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaximumValue");
                OnMaximumValueChanged();
            }
        }
        private global::System.Decimal _MaximumValue;
        partial void OnMaximumValueChanging(global::System.Decimal value);
        partial void OnMaximumValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal OptimumValueStart
        {
            get
            {
                return _OptimumValueStart;
            }
            set
            {
                OnOptimumValueStartChanging(value);
                ReportPropertyChanging("OptimumValueStart");
                _OptimumValueStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OptimumValueStart");
                OnOptimumValueStartChanged();
            }
        }
        private global::System.Decimal _OptimumValueStart;
        partial void OnOptimumValueStartChanging(global::System.Decimal value);
        partial void OnOptimumValueStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal OptimumValueEnd
        {
            get
            {
                return _OptimumValueEnd;
            }
            set
            {
                OnOptimumValueEndChanging(value);
                ReportPropertyChanging("OptimumValueEnd");
                _OptimumValueEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OptimumValueEnd");
                OnOptimumValueEndChanged();
            }
        }
        private global::System.Decimal _OptimumValueEnd;
        partial void OnOptimumValueEndChanging(global::System.Decimal value);
        partial void OnOptimumValueEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte MinimumOperator
        {
            get
            {
                return _MinimumOperator;
            }
            set
            {
                OnMinimumOperatorChanging(value);
                ReportPropertyChanging("MinimumOperator");
                _MinimumOperator = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinimumOperator");
                OnMinimumOperatorChanged();
            }
        }
        private global::System.Byte _MinimumOperator;
        partial void OnMinimumOperatorChanging(global::System.Byte value);
        partial void OnMinimumOperatorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte MaximumOperator
        {
            get
            {
                return _MaximumOperator;
            }
            set
            {
                OnMaximumOperatorChanging(value);
                ReportPropertyChanging("MaximumOperator");
                _MaximumOperator = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaximumOperator");
                OnMaximumOperatorChanged();
            }
        }
        private global::System.Byte _MaximumOperator;
        partial void OnMaximumOperatorChanging(global::System.Byte value);
        partial void OnMaximumOperatorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Unit
        {
            get
            {
                return _Unit;
            }
            set
            {
                OnUnitChanging(value);
                ReportPropertyChanging("Unit");
                _Unit = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Unit");
                OnUnitChanged();
            }
        }
        private global::System.String _Unit;
        partial void OnUnitChanging(global::System.String value);
        partial void OnUnitChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DeletedBy
        {
            get
            {
                return _DeletedBy;
            }
            set
            {
                OnDeletedByChanging(value);
                ReportPropertyChanging("DeletedBy");
                _DeletedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedBy");
                OnDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _DeletedBy;
        partial void OnDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedOn
        {
            get
            {
                return _DeletedOn;
            }
            set
            {
                OnDeletedOnChanging(value);
                ReportPropertyChanging("DeletedOn");
                _DeletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedOn");
                OnDeletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedOn;
        partial void OnDeletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedOnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__NumericIs__Issue__30F848ED1", "Issue1")]
        public Issue Issue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issue>("PrefAppModel.FK__NumericIs__Issue__30F848ED1", "Issue1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issue>("PrefAppModel.FK__NumericIs__Issue__30F848ED1", "Issue1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Issue> IssueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issue>("PrefAppModel.FK__NumericIs__Issue__30F848ED1", "Issue1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Issue>("PrefAppModel.FK__NumericIs__Issue__30F848ED1", "Issue1", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrefAppModel", Name="OptionIssue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OptionIssue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OptionIssue object.
        /// </summary>
        /// <param name="optionIssueID">Initial value of the OptionIssueID property.</param>
        /// <param name="optionIssueValue">Initial value of the OptionIssueValue property.</param>
        /// <param name="issueID">Initial value of the IssueID property.</param>
        /// <param name="optionIssueWeight">Initial value of the OptionIssueWeight property.</param>
        public static OptionIssue CreateOptionIssue(global::System.Guid optionIssueID, global::System.String optionIssueValue, global::System.Guid issueID, global::System.Decimal optionIssueWeight)
        {
            OptionIssue optionIssue = new OptionIssue();
            optionIssue.OptionIssueID = optionIssueID;
            optionIssue.OptionIssueValue = optionIssueValue;
            optionIssue.IssueID = issueID;
            optionIssue.OptionIssueWeight = optionIssueWeight;
            return optionIssue;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OptionIssueID
        {
            get
            {
                return _OptionIssueID;
            }
            set
            {
                if (_OptionIssueID != value)
                {
                    OnOptionIssueIDChanging(value);
                    ReportPropertyChanging("OptionIssueID");
                    _OptionIssueID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OptionIssueID");
                    OnOptionIssueIDChanged();
                }
            }
        }
        private global::System.Guid _OptionIssueID;
        partial void OnOptionIssueIDChanging(global::System.Guid value);
        partial void OnOptionIssueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OptionIssueValue
        {
            get
            {
                return _OptionIssueValue;
            }
            set
            {
                OnOptionIssueValueChanging(value);
                ReportPropertyChanging("OptionIssueValue");
                _OptionIssueValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OptionIssueValue");
                OnOptionIssueValueChanged();
            }
        }
        private global::System.String _OptionIssueValue;
        partial void OnOptionIssueValueChanging(global::System.String value);
        partial void OnOptionIssueValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IssueID
        {
            get
            {
                return _IssueID;
            }
            set
            {
                OnIssueIDChanging(value);
                ReportPropertyChanging("IssueID");
                _IssueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueID");
                OnIssueIDChanged();
            }
        }
        private global::System.Guid _IssueID;
        partial void OnIssueIDChanging(global::System.Guid value);
        partial void OnIssueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal OptionIssueWeight
        {
            get
            {
                return _OptionIssueWeight;
            }
            set
            {
                OnOptionIssueWeightChanging(value);
                ReportPropertyChanging("OptionIssueWeight");
                _OptionIssueWeight = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OptionIssueWeight");
                OnOptionIssueWeightChanged();
            }
        }
        private global::System.Decimal _OptionIssueWeight;
        partial void OnOptionIssueWeightChanging(global::System.Decimal value);
        partial void OnOptionIssueWeightChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DeletedBy
        {
            get
            {
                return _DeletedBy;
            }
            set
            {
                OnDeletedByChanging(value);
                ReportPropertyChanging("DeletedBy");
                _DeletedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedBy");
                OnDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _DeletedBy;
        partial void OnDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedOn
        {
            get
            {
                return _DeletedOn;
            }
            set
            {
                OnDeletedOnChanging(value);
                ReportPropertyChanging("DeletedOn");
                _DeletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedOn");
                OnDeletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedOn;
        partial void OnDeletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedOnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__OptionIss__Issue__31EC6D261", "Issue1")]
        public Issue Issue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issue>("PrefAppModel.FK__OptionIss__Issue__31EC6D261", "Issue1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issue>("PrefAppModel.FK__OptionIss__Issue__31EC6D261", "Issue1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Issue> IssueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issue>("PrefAppModel.FK__OptionIss__Issue__31EC6D261", "Issue1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Issue>("PrefAppModel.FK__OptionIss__Issue__31EC6D261", "Issue1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__MessageOp__Optio__72C60C4A", "MessageOptionIssue")]
        public EntityCollection<MessageOptionIssue> MessageOptionIssues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MessageOptionIssue>("PrefAppModel.FK__MessageOp__Optio__72C60C4A", "MessageOptionIssue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MessageOptionIssue>("PrefAppModel.FK__MessageOp__Optio__72C60C4A", "MessageOptionIssue", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrefAppModel", Name="PreferenceSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PreferenceSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PreferenceSet object.
        /// </summary>
        /// <param name="preferenceSetID">Initial value of the PreferenceSetID property.</param>
        /// <param name="preferenceSetName">Initial value of the PreferenceSetName property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="mainPreferenceSetID">Initial value of the MainPreferenceSetID property.</param>
        /// <param name="checkvariation">Initial value of the Checkvariation property.</param>
        /// <param name="variationValue">Initial value of the VariationValue property.</param>
        /// <param name="maxPercentage">Initial value of the MaxPercentage property.</param>
        public static PreferenceSet CreatePreferenceSet(global::System.Guid preferenceSetID, global::System.String preferenceSetName, global::System.Guid userID, global::System.Guid mainPreferenceSetID, global::System.Boolean checkvariation, global::System.Decimal variationValue, global::System.Decimal maxPercentage)
        {
            PreferenceSet preferenceSet = new PreferenceSet();
            preferenceSet.PreferenceSetID = preferenceSetID;
            preferenceSet.PreferenceSetName = preferenceSetName;
            preferenceSet.UserID = userID;
            preferenceSet.MainPreferenceSetID = mainPreferenceSetID;
            preferenceSet.Checkvariation = checkvariation;
            preferenceSet.VariationValue = variationValue;
            preferenceSet.MaxPercentage = maxPercentage;
            return preferenceSet;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PreferenceSetID
        {
            get
            {
                return _PreferenceSetID;
            }
            set
            {
                if (_PreferenceSetID != value)
                {
                    OnPreferenceSetIDChanging(value);
                    ReportPropertyChanging("PreferenceSetID");
                    _PreferenceSetID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PreferenceSetID");
                    OnPreferenceSetIDChanged();
                }
            }
        }
        private global::System.Guid _PreferenceSetID;
        partial void OnPreferenceSetIDChanging(global::System.Guid value);
        partial void OnPreferenceSetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PreferenceSetName
        {
            get
            {
                return _PreferenceSetName;
            }
            set
            {
                OnPreferenceSetNameChanging(value);
                ReportPropertyChanging("PreferenceSetName");
                _PreferenceSetName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PreferenceSetName");
                OnPreferenceSetNameChanged();
            }
        }
        private global::System.String _PreferenceSetName;
        partial void OnPreferenceSetNameChanging(global::System.String value);
        partial void OnPreferenceSetNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid MainPreferenceSetID
        {
            get
            {
                return _MainPreferenceSetID;
            }
            set
            {
                OnMainPreferenceSetIDChanging(value);
                ReportPropertyChanging("MainPreferenceSetID");
                _MainPreferenceSetID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MainPreferenceSetID");
                OnMainPreferenceSetIDChanged();
            }
        }
        private global::System.Guid _MainPreferenceSetID;
        partial void OnMainPreferenceSetIDChanging(global::System.Guid value);
        partial void OnMainPreferenceSetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DeletedBy
        {
            get
            {
                return _DeletedBy;
            }
            set
            {
                OnDeletedByChanging(value);
                ReportPropertyChanging("DeletedBy");
                _DeletedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedBy");
                OnDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _DeletedBy;
        partial void OnDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedOn
        {
            get
            {
                return _DeletedOn;
            }
            set
            {
                OnDeletedOnChanging(value);
                ReportPropertyChanging("DeletedOn");
                _DeletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedOn");
                OnDeletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedOn;
        partial void OnDeletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Checkvariation
        {
            get
            {
                return _Checkvariation;
            }
            set
            {
                OnCheckvariationChanging(value);
                ReportPropertyChanging("Checkvariation");
                _Checkvariation = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Checkvariation");
                OnCheckvariationChanged();
            }
        }
        private global::System.Boolean _Checkvariation;
        partial void OnCheckvariationChanging(global::System.Boolean value);
        partial void OnCheckvariationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal VariationValue
        {
            get
            {
                return _VariationValue;
            }
            set
            {
                OnVariationValueChanging(value);
                ReportPropertyChanging("VariationValue");
                _VariationValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VariationValue");
                OnVariationValueChanged();
            }
        }
        private global::System.Decimal _VariationValue;
        partial void OnVariationValueChanging(global::System.Decimal value);
        partial void OnVariationValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MaxPercentage
        {
            get
            {
                return _MaxPercentage;
            }
            set
            {
                OnMaxPercentageChanging(value);
                ReportPropertyChanging("MaxPercentage");
                _MaxPercentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxPercentage");
                OnMaxPercentageChanged();
            }
        }
        private global::System.Decimal _MaxPercentage;
        partial void OnMaxPercentageChanging(global::System.Decimal value);
        partial void OnMaxPercentageChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__Issue__Preferenc__2D27B8091", "Issue1")]
        public EntityCollection<Issue> Issues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Issue>("PrefAppModel.FK__Issue__Preferenc__2D27B8091", "Issue1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Issue>("PrefAppModel.FK__Issue__Preferenc__2D27B8091", "Issue1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__Preferenc__MainP__32E0915F1", "MainPreferenceSet")]
        public MainPreferenceSet MainPreferenceSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MainPreferenceSet>("PrefAppModel.FK__Preferenc__MainP__32E0915F1", "MainPreferenceSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MainPreferenceSet>("PrefAppModel.FK__Preferenc__MainP__32E0915F1", "MainPreferenceSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MainPreferenceSet> MainPreferenceSetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MainPreferenceSet>("PrefAppModel.FK__Preferenc__MainP__32E0915F1", "MainPreferenceSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MainPreferenceSet>("PrefAppModel.FK__Preferenc__MainP__32E0915F1", "MainPreferenceSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__Preferenc__Prefe__14270015", "PreferenceSetNeg")]
        public EntityCollection<PreferenceSetNeg> PreferenceSetNegs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferenceSetNeg>("PrefAppModel.FK__Preferenc__Prefe__14270015", "PreferenceSetNeg");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferenceSetNeg>("PrefAppModel.FK__Preferenc__Prefe__14270015", "PreferenceSetNeg", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK_PreferenceSetOrganization_PreferenceSet", "PreferenceSetOrganization")]
        public EntityCollection<PreferenceSetOrganization> PreferenceSetOrganizations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PreferenceSetOrganization>("PrefAppModel.FK_PreferenceSetOrganization_PreferenceSet", "PreferenceSetOrganization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PreferenceSetOrganization>("PrefAppModel.FK_PreferenceSetOrganization_PreferenceSet", "PreferenceSetOrganization", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrefAppModel", Name="PreferenceSetNeg")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PreferenceSetNeg : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PreferenceSetNeg object.
        /// </summary>
        /// <param name="preferenceSetNegID">Initial value of the PreferenceSetNegID property.</param>
        /// <param name="negID">Initial value of the NegID property.</param>
        /// <param name="percentage">Initial value of the Percentage property.</param>
        /// <param name="preferenceSetID">Initial value of the PreferenceSetID property.</param>
        /// <param name="negotiationName">Initial value of the NegotiationName property.</param>
        public static PreferenceSetNeg CreatePreferenceSetNeg(global::System.Guid preferenceSetNegID, global::System.Guid negID, global::System.Decimal percentage, global::System.Guid preferenceSetID, global::System.String negotiationName)
        {
            PreferenceSetNeg preferenceSetNeg = new PreferenceSetNeg();
            preferenceSetNeg.PreferenceSetNegID = preferenceSetNegID;
            preferenceSetNeg.NegID = negID;
            preferenceSetNeg.Percentage = percentage;
            preferenceSetNeg.PreferenceSetID = preferenceSetID;
            preferenceSetNeg.NegotiationName = negotiationName;
            return preferenceSetNeg;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PreferenceSetNegID
        {
            get
            {
                return _PreferenceSetNegID;
            }
            set
            {
                if (_PreferenceSetNegID != value)
                {
                    OnPreferenceSetNegIDChanging(value);
                    ReportPropertyChanging("PreferenceSetNegID");
                    _PreferenceSetNegID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PreferenceSetNegID");
                    OnPreferenceSetNegIDChanged();
                }
            }
        }
        private global::System.Guid _PreferenceSetNegID;
        partial void OnPreferenceSetNegIDChanging(global::System.Guid value);
        partial void OnPreferenceSetNegIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid NegID
        {
            get
            {
                return _NegID;
            }
            set
            {
                OnNegIDChanging(value);
                ReportPropertyChanging("NegID");
                _NegID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NegID");
                OnNegIDChanged();
            }
        }
        private global::System.Guid _NegID;
        partial void OnNegIDChanging(global::System.Guid value);
        partial void OnNegIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Percentage
        {
            get
            {
                return _Percentage;
            }
            set
            {
                OnPercentageChanging(value);
                ReportPropertyChanging("Percentage");
                _Percentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentage");
                OnPercentageChanged();
            }
        }
        private global::System.Decimal _Percentage;
        partial void OnPercentageChanging(global::System.Decimal value);
        partial void OnPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PreferenceSetID
        {
            get
            {
                return _PreferenceSetID;
            }
            set
            {
                OnPreferenceSetIDChanging(value);
                ReportPropertyChanging("PreferenceSetID");
                _PreferenceSetID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreferenceSetID");
                OnPreferenceSetIDChanged();
            }
        }
        private global::System.Guid _PreferenceSetID;
        partial void OnPreferenceSetIDChanging(global::System.Guid value);
        partial void OnPreferenceSetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Deleted;
        partial void OnDeletedChanging(Nullable<global::System.Boolean> value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DeletedBy
        {
            get
            {
                return _DeletedBy;
            }
            set
            {
                OnDeletedByChanging(value);
                ReportPropertyChanging("DeletedBy");
                _DeletedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedBy");
                OnDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _DeletedBy;
        partial void OnDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedOn
        {
            get
            {
                return _DeletedOn;
            }
            set
            {
                OnDeletedOnChanging(value);
                ReportPropertyChanging("DeletedOn");
                _DeletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedOn");
                OnDeletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedOn;
        partial void OnDeletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NegotiationName
        {
            get
            {
                return _NegotiationName;
            }
            set
            {
                OnNegotiationNameChanging(value);
                ReportPropertyChanging("NegotiationName");
                _NegotiationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NegotiationName");
                OnNegotiationNameChanged();
            }
        }
        private global::System.String _NegotiationName;
        partial void OnNegotiationNameChanging(global::System.String value);
        partial void OnNegotiationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> StatusID
        {
            get
            {
                return _StatusID;
            }
            set
            {
                OnStatusIDChanging(value);
                ReportPropertyChanging("StatusID");
                _StatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StatusID");
                OnStatusIDChanged();
            }
        }
        private Nullable<global::System.Guid> _StatusID;
        partial void OnStatusIDChanging(Nullable<global::System.Guid> value);
        partial void OnStatusIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__NegConver__Prefe__1332DBDC", "NegConversation")]
        public EntityCollection<NegConversation> NegConversations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NegConversation>("PrefAppModel.FK__NegConver__Prefe__1332DBDC", "NegConversation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NegConversation>("PrefAppModel.FK__NegConver__Prefe__1332DBDC", "NegConversation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK__Preferenc__Prefe__14270015", "PreferenceSet")]
        public PreferenceSet PreferenceSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PreferenceSet>("PrefAppModel.FK__Preferenc__Prefe__14270015", "PreferenceSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PreferenceSet>("PrefAppModel.FK__Preferenc__Prefe__14270015", "PreferenceSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PreferenceSet> PreferenceSetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PreferenceSet>("PrefAppModel.FK__Preferenc__Prefe__14270015", "PreferenceSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PreferenceSet>("PrefAppModel.FK__Preferenc__Prefe__14270015", "PreferenceSet", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PrefAppModel", Name="PreferenceSetOrganization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PreferenceSetOrganization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PreferenceSetOrganization object.
        /// </summary>
        /// <param name="preferenceSetOrganizationID">Initial value of the PreferenceSetOrganizationID property.</param>
        /// <param name="preferenceSetID">Initial value of the PreferenceSetID property.</param>
        /// <param name="organizationID">Initial value of the OrganizationID property.</param>
        /// <param name="deleted">Initial value of the Deleted property.</param>
        public static PreferenceSetOrganization CreatePreferenceSetOrganization(global::System.Guid preferenceSetOrganizationID, global::System.Guid preferenceSetID, global::System.Guid organizationID, global::System.Boolean deleted)
        {
            PreferenceSetOrganization preferenceSetOrganization = new PreferenceSetOrganization();
            preferenceSetOrganization.PreferenceSetOrganizationID = preferenceSetOrganizationID;
            preferenceSetOrganization.PreferenceSetID = preferenceSetID;
            preferenceSetOrganization.OrganizationID = organizationID;
            preferenceSetOrganization.Deleted = deleted;
            return preferenceSetOrganization;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PreferenceSetOrganizationID
        {
            get
            {
                return _PreferenceSetOrganizationID;
            }
            set
            {
                if (_PreferenceSetOrganizationID != value)
                {
                    OnPreferenceSetOrganizationIDChanging(value);
                    ReportPropertyChanging("PreferenceSetOrganizationID");
                    _PreferenceSetOrganizationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PreferenceSetOrganizationID");
                    OnPreferenceSetOrganizationIDChanged();
                }
            }
        }
        private global::System.Guid _PreferenceSetOrganizationID;
        partial void OnPreferenceSetOrganizationIDChanging(global::System.Guid value);
        partial void OnPreferenceSetOrganizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid PreferenceSetID
        {
            get
            {
                return _PreferenceSetID;
            }
            set
            {
                OnPreferenceSetIDChanging(value);
                ReportPropertyChanging("PreferenceSetID");
                _PreferenceSetID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreferenceSetID");
                OnPreferenceSetIDChanged();
            }
        }
        private global::System.Guid _PreferenceSetID;
        partial void OnPreferenceSetIDChanging(global::System.Guid value);
        partial void OnPreferenceSetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private global::System.Guid _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.Guid value);
        partial void OnOrganizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Deleted
        {
            get
            {
                return _Deleted;
            }
            set
            {
                OnDeletedChanging(value);
                ReportPropertyChanging("Deleted");
                _Deleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Deleted");
                OnDeletedChanged();
            }
        }
        private global::System.Boolean _Deleted;
        partial void OnDeletedChanging(global::System.Boolean value);
        partial void OnDeletedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> DeletedBy
        {
            get
            {
                return _DeletedBy;
            }
            set
            {
                OnDeletedByChanging(value);
                ReportPropertyChanging("DeletedBy");
                _DeletedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedBy");
                OnDeletedByChanged();
            }
        }
        private Nullable<global::System.Guid> _DeletedBy;
        partial void OnDeletedByChanging(Nullable<global::System.Guid> value);
        partial void OnDeletedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeletedOn
        {
            get
            {
                return _DeletedOn;
            }
            set
            {
                OnDeletedOnChanging(value);
                ReportPropertyChanging("DeletedOn");
                _DeletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeletedOn");
                OnDeletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeletedOn;
        partial void OnDeletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnDeletedOnChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PrefAppModel", "FK_PreferenceSetOrganization_PreferenceSet", "PreferenceSet")]
        public PreferenceSet PreferenceSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PreferenceSet>("PrefAppModel.FK_PreferenceSetOrganization_PreferenceSet", "PreferenceSet").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PreferenceSet>("PrefAppModel.FK_PreferenceSetOrganization_PreferenceSet", "PreferenceSet").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PreferenceSet> PreferenceSetReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PreferenceSet>("PrefAppModel.FK_PreferenceSetOrganization_PreferenceSet", "PreferenceSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PreferenceSet>("PrefAppModel.FK_PreferenceSetOrganization_PreferenceSet", "PreferenceSet", value);
                }
            }
        }

        #endregion
    }

    #endregion
    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="PrefAppModel", Name="ConversationPeriod")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ConversationPeriod : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MinConversationDate
        {
            get
            {
                return _MinConversationDate;
            }
            set
            {
                OnMinConversationDateChanging(value);
                ReportPropertyChanging("MinConversationDate");
                _MinConversationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MinConversationDate");
                OnMinConversationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _MinConversationDate;
        partial void OnMinConversationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnMinConversationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MaxConversationDate
        {
            get
            {
                return _MaxConversationDate;
            }
            set
            {
                OnMaxConversationDateChanging(value);
                ReportPropertyChanging("MaxConversationDate");
                _MaxConversationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MaxConversationDate");
                OnMaxConversationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _MaxConversationDate;
        partial void OnMaxConversationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnMaxConversationDateChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="PrefAppModel", Name="IssueHistoryResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class IssueHistoryResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IssueHistoryResult object.
        /// </summary>
        /// <param name="issueName">Initial value of the IssueName property.</param>
        public static IssueHistoryResult CreateIssueHistoryResult(global::System.String issueName)
        {
            IssueHistoryResult issueHistoryResult = new IssueHistoryResult();
            issueHistoryResult.IssueName = issueName;
            return issueHistoryResult;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IssueName
        {
            get
            {
                return _IssueName;
            }
            set
            {
                OnIssueNameChanging(value);
                ReportPropertyChanging("IssueName");
                _IssueName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IssueName");
                OnIssueNameChanged();
            }
        }
        private global::System.String _IssueName;
        partial void OnIssueNameChanging(global::System.String value);
        partial void OnIssueNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TimesUsed
        {
            get
            {
                return _TimesUsed;
            }
            set
            {
                OnTimesUsedChanging(value);
                ReportPropertyChanging("TimesUsed");
                _TimesUsed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimesUsed");
                OnTimesUsedChanged();
            }
        }
        private Nullable<global::System.Int32> _TimesUsed;
        partial void OnTimesUsedChanging(Nullable<global::System.Int32> value);
        partial void OnTimesUsedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AverageScore
        {
            get
            {
                return _AverageScore;
            }
            set
            {
                OnAverageScoreChanging(value);
                ReportPropertyChanging("AverageScore");
                _AverageScore = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AverageScore");
                OnAverageScoreChanged();
            }
        }
        private Nullable<global::System.Decimal> _AverageScore;
        partial void OnAverageScoreChanging(Nullable<global::System.Decimal> value);
        partial void OnAverageScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Rank
        {
            get
            {
                return _Rank;
            }
            set
            {
                OnRankChanging(value);
                ReportPropertyChanging("Rank");
                _Rank = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rank");
                OnRankChanged();
            }
        }
        private Nullable<global::System.Int64> _Rank;
        partial void OnRankChanging(Nullable<global::System.Int64> value);
        partial void OnRankChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="PrefAppModel", Name="IssueStatisticalsResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class IssueStatisticalsResult : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new IssueStatisticalsResult object.
        /// </summary>
        /// <param name="issueName">Initial value of the IssueName property.</param>
        public static IssueStatisticalsResult CreateIssueStatisticalsResult(global::System.String issueName)
        {
            IssueStatisticalsResult issueStatisticalsResult = new IssueStatisticalsResult();
            issueStatisticalsResult.IssueName = issueName;
            return issueStatisticalsResult;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String IssueName
        {
            get
            {
                return _IssueName;
            }
            set
            {
                OnIssueNameChanging(value);
                ReportPropertyChanging("IssueName");
                _IssueName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("IssueName");
                OnIssueNameChanged();
            }
        }
        private global::System.String _IssueName;
        partial void OnIssueNameChanging(global::System.String value);
        partial void OnIssueNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TimesUsed
        {
            get
            {
                return _TimesUsed;
            }
            set
            {
                OnTimesUsedChanging(value);
                ReportPropertyChanging("TimesUsed");
                _TimesUsed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TimesUsed");
                OnTimesUsedChanged();
            }
        }
        private Nullable<global::System.Int32> _TimesUsed;
        partial void OnTimesUsedChanging(Nullable<global::System.Int32> value);
        partial void OnTimesUsedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Rank
        {
            get
            {
                return _Rank;
            }
            set
            {
                OnRankChanging(value);
                ReportPropertyChanging("Rank");
                _Rank = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rank");
                OnRankChanged();
            }
        }
        private Nullable<global::System.Int64> _Rank;
        partial void OnRankChanging(Nullable<global::System.Int64> value);
        partial void OnRankChanged();

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="PrefAppModel", Name="OfferItem_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class OfferItem_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OfferItem_Result object.
        /// </summary>
        /// <param name="issueID">Initial value of the IssueID property.</param>
        /// <param name="rank">Initial value of the Rank property.</param>
        /// <param name="issueTypeID">Initial value of the IssueTypeID property.</param>
        public static OfferItem_Result CreateOfferItem_Result(global::System.Guid issueID, global::System.Int64 rank, global::System.Guid issueTypeID)
        {
            OfferItem_Result offerItem_Result = new OfferItem_Result();
            offerItem_Result.IssueID = issueID;
            offerItem_Result.Rank = rank;
            offerItem_Result.IssueTypeID = issueTypeID;
            return offerItem_Result;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IssueID
        {
            get
            {
                return _IssueID;
            }
            set
            {
                OnIssueIDChanging(value);
                ReportPropertyChanging("IssueID");
                _IssueID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueID");
                OnIssueIDChanged();
            }
        }
        private global::System.Guid _IssueID;
        partial void OnIssueIDChanging(global::System.Guid value);
        partial void OnIssueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private Nullable<global::System.Decimal> _Score;
        partial void OnScoreChanging(Nullable<global::System.Decimal> value);
        partial void OnScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> OptionRate
        {
            get
            {
                return _OptionRate;
            }
            set
            {
                OnOptionRateChanging(value);
                ReportPropertyChanging("OptionRate");
                _OptionRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OptionRate");
                OnOptionRateChanged();
            }
        }
        private Nullable<global::System.Decimal> _OptionRate;
        partial void OnOptionRateChanging(Nullable<global::System.Decimal> value);
        partial void OnOptionRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OptionID
        {
            get
            {
                return _OptionID;
            }
            set
            {
                OnOptionIDChanging(value);
                ReportPropertyChanging("OptionID");
                _OptionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OptionID");
                OnOptionIDChanged();
            }
        }
        private Nullable<global::System.Guid> _OptionID;
        partial void OnOptionIDChanging(Nullable<global::System.Guid> value);
        partial void OnOptionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Rank
        {
            get
            {
                return _Rank;
            }
            set
            {
                OnRankChanging(value);
                ReportPropertyChanging("Rank");
                _Rank = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rank");
                OnRankChanged();
            }
        }
        private global::System.Int64 _Rank;
        partial void OnRankChanging(global::System.Int64 value);
        partial void OnRankChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid IssueTypeID
        {
            get
            {
                return _IssueTypeID;
            }
            set
            {
                OnIssueTypeIDChanging(value);
                ReportPropertyChanging("IssueTypeID");
                _IssueTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssueTypeID");
                OnIssueTypeIDChanged();
            }
        }
        private global::System.Guid _IssueTypeID;
        partial void OnIssueTypeIDChanging(global::System.Guid value);
        partial void OnIssueTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion
    }

    #endregion
    
}
